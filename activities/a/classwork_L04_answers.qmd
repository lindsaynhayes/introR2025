---
title: "Data Visualization with ggplot2"
author: "Lindsay N. Hayes"
date: 2025-07-08
draft: true
editor_options: 
  chunk_output_type: console
---

## About the activity

1)  Access the Quarto document [here](https://github.com/lindsaynhayes/introR2025/blob/main/activities/classwork04/classwork_L04.qmd).

2)  Download the raw file.

3) Open it in RStudio.

We will work our way through this quarto document together during class. The activity will cover plotting data with ggplot2 in detail!

## Load the Packages
The `tidyverse` library includes `ggplot2` and I added `cowplot` to make the plots prettier
```{r}
#| label: packages
#| message: false

library(tidyverse)
library(cowplot)
library(palmerpenguins)
library(taylor)
```

## Histogram & Density plots
Lets use the `palmerpenguins` data to plot some histograms. Histograms are good for evaluating the distribution of continuous data.

#### 1. How would you describe the distribution? Is it uni-modal or bi-modal?
```{r}

penguins |> head()


# plot the distribution of the penguins' body mass using geom_histogram()

ggplot(penguins, aes(x = body_mass_g)) + geom_histogram()

# lets make it a little more pretty (note tidy syntax is to put each element on a new line, the "+" wraps the text)

ggplot(penguins, aes(x = body_mass_g)) + 
  geom_histogram(fill = "deeppink") + 
  theme_cowplot()

# histograms are impacted by the "bin" or how each bar is averaging (how thick the bars are). We can change that will `bin` or `binwidth`

ggplot(penguins, aes(x = body_mass_g)) + 
  geom_histogram(binwidth = 25, fill = "deeppink") + 
  theme_cowplot()

# add some more labels

ggplot(penguins, aes(x = body_mass_g)) + 
  geom_histogram(binwidth = 50, fill = "deeppink") + 
  theme_cowplot() +
  labs(title = "Distribution of Penguin Body Mass",
         x = "Body Mass (g)",
         y ="Count")

```

#### 2. Plot the other penguin bill and flipper measurements? What are their distribution? How does the binwidth change the interpretation of the distributions?
```{r}

penguins |> head()


ggplot(penguins, aes(x = bill_length_mm)) + 
  geom_histogram(binwidth = 1, fill = "purple") + 
  theme_cowplot() +
  labs(title = "Distribution of Penguin Bill Length",
         x = "Bill Length (mm)",
         y ="Count")


ggplot(penguins, aes(x = bill_depth_mm)) + 
  geom_histogram(binwidth = 0.3, fill = "springgreen") + 
  theme_cowplot() +
  labs(title = "Distribution of Penguin Bill Depth",
         x = "Bill Depth (mm)",
         y ="Count")

ggplot(penguins, aes(x = flipper_length_mm)) + 
  geom_histogram(binwidth = 1, fill = "gold") + 
  theme_cowplot() +
  labs(title = "Distribution of Penguin Flipper Length",
         x = "Flipper Length (mm)",
         y ="Count")

```

#### 3. A benefit of geom_density() is that the plots are not dependent on the binsize. Compare the histograms and the density plots for each data feature.
```{r}

a <- ggplot(penguins, aes(x = body_mass_g)) + 
  geom_density(fill = "deeppink") + 
  theme_cowplot() +
  labs(subtitle = "Distribution of Penguin Body Mass",
         x = "Body Mass (g)",
         y ="Density")

b <- ggplot(penguins, aes(x = bill_length_mm)) + 
  geom_density(fill = "purple") + 
  theme_cowplot() +
  labs(subtitle = "Distribution of Penguin Bill Length",
         x = "Bill Length (mm)",
         y ="Density")


c <- ggplot(penguins, aes(x = bill_depth_mm)) + 
  geom_density(fill = "springgreen") + 
  theme_cowplot() +
  labs(subtitle = "Distribution of Penguin Bill Depth",
         x = "Bill Depth (mm)",
         y ="Density")

d <- ggplot(penguins, aes(x = flipper_length_mm)) + 
  geom_density(fill = "gold") + 
  theme_cowplot() +
  labs(subtitle = "Distribution of Penguin Flipper Length",
         x = "Flipper Length (mm)",
         y ="Density")

plot_grid(a,b,c,d, labels = c("A", "B", "C", "D"))

```

#### 4. Where do you think the bimodal distributions may come from? Lets check the distribution across different species. Add `fill = species` to the `aes()` so we can see how the distributions change across species of penguins. 
```{r}
#| fig-width: 10
#| fig-height: 6
#| warning: false
 

# add an `alpha` to the geom_density to sets the opacity of the density plots. 

a <- ggplot(penguins, aes(x = body_mass_g, fill = species)) + 
  geom_density(alpha = 0.5) + 
  theme_cowplot() +
  labs(subtitle = "Distribution of Penguin Body Mass",
         x = "Body Mass (g)",
         y ="Density")

b <- ggplot(penguins, aes(x = bill_length_mm, fill = species)) + 
  geom_density(alpha = 0.5) + 
  theme_cowplot() +
  labs(subtitle = "Distribution of Penguin Bill Length",
         x = "Bill Length (mm)",
         y ="Density")


c <- ggplot(penguins, aes(x = bill_depth_mm, fill = species)) + 
  geom_density(alpha = 0.5) + 
  theme_cowplot() +
  labs(subtitle = "Distribution of Penguin Bill Depth",
         x = "Bill Depth (mm)",
         y ="Density")

d <- ggplot(penguins, aes(x = flipper_length_mm, fill = species)) + 
  geom_density(alpha = 0.5) + 
  theme_cowplot() +
  labs(subtitle = "Distribution of Penguin Flipper Length",
         x = "Flipper Length (mm)",
         y ="Density")

plot_grid(a,b,c,d, labels = c("A", "B", "C", "D"))
```




## Barplots of Categorical data
Another type of distribution and count data is of categorical data. Count data for categorical data is best displayed in barplots

```{r}
#| fig-width: 8
#| fig-height: 6

# some tidying
taylor_album_songs$key <- str_sub(taylor_album_songs$key_name, 1, 1)
taylor_album_songs$album_name <- fct_inorder(taylor_album_songs$album_name)

# You can see both the difference in the number of songs per album, but also in the numbers in each key. 

ggplot(taylor_album_songs, aes(y = album_name, fill = key)) + 
  geom_bar() +
  theme_cowplot() +
  labs(title = "Keys of TS albums",
       x = "Count", 
       y = "") + scale_fill_brewer(palette="Set2")

# Now lest look at the proportions
ggplot(taylor_album_songs, aes(y = album_name, fill = key)) + 
  geom_bar(position = "fill") +
  theme_cowplot() +
  labs(title = "Keys of TS albums",
       x = "Proportion", 
       y = "") + scale_fill_brewer(palette="Set2")

```

#### 5. What factors distinguish Ideal cut versus Good cut diamonds? 
Using the `diamonds` dataset, determine the distribution of the `cut`, `color`, and `clarity` of diamonds.
```{r}
#| fig-width: 10
#| fig-height: 7

a <- ggplot(diamonds, aes(y = cut)) + 
  geom_bar(fill = "yellow", color = "black") +
  theme_cowplot() 

b<- ggplot(diamonds, aes(x = color)) + 
  geom_bar(fill = c(rainbow(7))) +
  theme_cowplot()

c <- ggplot(diamonds, aes(y = clarity, fill = clarity)) + 
  geom_bar() +
  theme_cowplot() +
  scale_fill_grey()

plot_grid(a,b,c)

# Which plots show the effect best?
a1 <- ggplot(diamonds, aes(y = color, fill = cut)) + 
  geom_bar(position = "fill") +
  theme_cowplot() 


a2 <- ggplot(diamonds, aes(y = clarity, fill = cut)) + 
  geom_bar(position = "fill") +
  theme_cowplot() 

a3 <- ggplot(diamonds, aes(y = cut, fill = color)) + 
  geom_bar(position = "fill") +
  theme_cowplot() 


a4 <- ggplot(diamonds, aes(y = cut, fill = clarity)) + 
  geom_bar(position = "fill") +
  theme_cowplot() 



plot_grid(a1, a2, a3, a4)
```


## Boxplots! 
The best way to view group differences.

#### 6. Does the bill length and depth, the flipper length, or the body mass differ across species of penguins? 

Using the `penguins` dataset use geom_boxplot() to find out if there is a difference in the penguin features between different species of penguins 

```{r}
#| fig-width: 8
#| fig-height: 6

# quick plot
a <- ggplot(penguins, aes(x = species, y = bill_length_mm, fill = species)) + geom_boxplot()
b <- ggplot(penguins, aes(x = species, y = bill_depth_mm, fill = species)) + geom_boxplot()
c <- ggplot(penguins, aes(x = species, y = flipper_length_mm, fill = species)) + geom_boxplot()
d <- ggplot(penguins, aes(x = species, y = body_mass_g, fill = species)) + geom_boxplot()

plot_grid(a,b,c,d)
```
```{r}
# make a nice plot
ggplot(penguins, aes(x = species, y = bill_length_mm, fill = species)) + 
  geom_boxplot(outlier.shape = NA) + 
  geom_point(size = 2, aes(shape = sex), position = position_jitter(width = 0.1)) +
  theme_cowplot() +
  ylim(30,60) +
  labs(y = "Bill Length (mm)", x = "", subtitle = "Bill Length across Species")


ggplot(penguins, aes(x = species, y = bill_depth_mm, fill = species)) + 
  geom_boxplot(outlier.shape = NA) + 
  geom_point(size = 2, aes(shape = sex), position = position_jitter(width = 0.1)) +
  theme_cowplot() +
  ylim(10,25) +
  labs(y = "Bill Depth (mm)", x = "", subtitle = "Bill Depth across Species")


ggplot(penguins, aes(x = species, y = flipper_length_mm, fill = species)) + 
  geom_boxplot(outlier.shape = NA) + 
  geom_point(size = 2, aes(shape = sex), position = position_jitter(width = 0.1)) +
  theme_cowplot() +
  ylim(150,250) +
  labs(y = "Flipper Length (mm)", x = "", subtitle = "Flipper Length across Species")


ggplot(penguins, aes(x = species, y = body_mass_g, fill = species)) + 
  geom_boxplot(outlier.shape = NA) + 
  geom_point(size = 2, aes(shape = sex), position = position_jitter(width = 0.1)) +
  theme_cowplot() +
  ylim(2500,7000) +
  labs(y = "Mass (g)", x = "", subtitle = "Mass across Species")

```

*Isn't this better than bar graphs??!!!*

**Note: `geom_violin()` can also be a good alternative to a boxplot if you have a very large sample size, such as in single cell RNA sequencing or flow cytometry data. Try the plots as a `geom_violin()` instead of `geom_boxplot()`.**


## Scatter and Line Plots 
Looking at 2 continuous variables and their relationship to one another. 

#### 7. Using the `iris` dataset use to find out the relationship between `Sepal.Length`, `Sepal.Width`, `Petal.Length`, and Petal.Width` and how that relationship changes across different `Species` of iris flowers. 


```{r}

iris |> head()


ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, color = Species, group = Species)) + 
  geom_point() + 
  geom_smooth(method = lm) +
  theme_cowplot() +
  labs( x = "Sepal Length (mm)", y= "Sepal Width (mm)")



ggplot(iris, aes(x = Petal.Length, y = Petal.Width, color = Species, group = Species)) + 
  geom_point() + 
  geom_smooth(method = lm) +
  theme_cowplot() +
  labs( x = "Petal Length (mm)", y= "Petal Width (mm)")


```



#### 8. Using the `ChickWeight` data, determine which `Diet` lead to the greatest `weight` gain over `Time.` Remember to take into account repeated measures across `Chick`


```{r}
#| fig-width: 6
#| fig-height: 6


ggplot(ChickWeight, aes(x = Time, y = weight, group = Chick, color = Diet)) + 
  geom_point(size = 1, alpha = 0.5) +
  geom_line(linewidth=0.5, alpha = 0.5) +
  geom_smooth(method = lm, aes(group = Diet), se = FALSE, linewidth = 3) +
  theme_cowplot() + 
  scale_color_brewer(palette = "Set1")
```


```{r}
sessionInfo()
```

