{
  "hash": "74f22a975af7653da5b97b1ad6861db2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Wrangling with tidyverse\"\nauthor: \"Lindsay N. Hayes\"\ndate: 2025-07-08\ndraft: false\neditor_options: \n  chunk_output_type: console\n---\n\n\n## About the activity\n\n1)  Access the Quarto document [here](https://github.com/lindsaynhayes/introR2025/blob/main/activities/classwork03/classwork_L03.qmd).\n\n2)  Download the raw file.\n\n3) Open it in RStudio.\n\nWe will work our way through this quarto document together during class. The activity will cover reshaping, filtering, and summarizing data using tidyverse principles.\n\n## Load the Tidyverse Package\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(cowplot)\n```\n:::\n\n\n\n# Reshaping and Summarizing Data\nA common type of data that requires reshaping is time course data. \n\nUsing tidyverse principles answer the questions below:\n\n## 1. Which month had the most and least passengers in the `AirPassengers` data?\n\nThe `AirPassengers` data which is a time-series of data representing the monthly international airline passenger numbers from January 1949 to December 1960. Search for AirPassengers in the `Help` to learn more about the dataset. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load and inspect the data, a little reshaping here to get in to an easy to read format for you.\nAP_matrix <- matrix(AirPassengers, nrow = length(unique(floor(time(AirPassengers)))), byrow = TRUE)\ncolnames(AP_matrix) <- month.abb\nrownames(AP_matrix) <- unique(floor(time(AirPassengers)))\nAP_df <- as.data.frame(AP_matrix)\nAP_df$Year <- rownames(AP_matrix)\n```\n:::\n\n\n### A. Is the data long or wide? What form does it need to be in? How can you convert to the form you need?\n\n::: {.cell}\n\n```{.r .cell-code}\nAP_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec Year\n1949 112 118 132 129 121 135 148 148 136 119 104 118 1949\n1950 115 126 141 135 125 149 170 170 158 133 114 140 1950\n1951 145 150 178 163 172 178 199 199 184 162 146 166 1951\n1952 171 180 193 181 183 218 230 242 209 191 172 194 1952\n1953 196 196 236 235 229 243 264 272 237 211 180 201 1953\n1954 204 188 235 227 234 264 302 293 259 229 203 229 1954\n1955 242 233 267 269 270 315 364 347 312 274 237 278 1955\n1956 284 277 317 313 318 374 413 405 355 306 271 306 1956\n1957 315 301 356 348 355 422 465 467 404 347 305 336 1957\n1958 340 318 362 348 363 435 491 505 404 359 310 337 1958\n1959 360 342 406 396 420 472 548 559 463 407 362 405 1959\n1960 417 391 419 461 472 535 622 606 508 461 390 432 1960\n```\n\n\n:::\n\n```{.r .cell-code}\nAP_long <- AP_df |> pivot_longer(cols = 1:12, names_to = \"months\", values_to = \"count\")\n```\n:::\n\n\n### B. How can we extract the the most and least traveled months each year? \n\n::: {.cell}\n\n```{.r .cell-code}\nAP_long |> \n  group_by(months) |>\n  summarise(max_travel = max(count)) |>\n  arrange(max_travel) |>\n  ggplot(aes(x = months, y = max_travel)) + geom_col()\n```\n\n::: {.cell-output-display}\n![](classwork_L03_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## 2. What was the percent increase in passengers each year between Aug and Nov?\n\n::: {.cell}\n\n```{.r .cell-code}\n# To answer this question we need to find the ratio of Aug and Nov travelers. We need the data in the wide format.\n\n# how can we add the ratio to get the percent increase?\n\nAP_long\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 144 × 3\n   Year  months count\n   <chr> <chr>  <dbl>\n 1 1949  Jan      112\n 2 1949  Feb      118\n 3 1949  Mar      132\n 4 1949  Apr      129\n 5 1949  May      121\n 6 1949  Jun      135\n 7 1949  Jul      148\n 8 1949  Aug      148\n 9 1949  Sep      136\n10 1949  Oct      119\n# ℹ 134 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nAP_df |> mutate(ratio = ((Aug/Nov)-1) *100) |>\n  select(ratio)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        ratio\n1949 42.30769\n1950 49.12281\n1951 36.30137\n1952 40.69767\n1953 51.11111\n1954 44.33498\n1955 46.41350\n1956 49.44649\n1957 53.11475\n1958 62.90323\n1959 54.41989\n1960 55.38462\n```\n\n\n:::\n:::\n\n\n\n## 3. Which diet lead to heavier chicks?\nWe will use the `ChickWeight` data. Use the help to read more about the data. \n\n::: {.cell}\n\n```{.r .cell-code}\n# First look at the data.\nglimpse(ChickWeight)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 578\nColumns: 4\n$ weight <dbl> 42, 51, 59, 64, 76, 93, 106, 125, 149, 171, 199, 205, 40, 49, 5…\n$ Time   <dbl> 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 21, 0, 2, 4, 6, 8, 10, 1…\n$ Chick  <ord> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, …\n$ Diet   <fct> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n```\n\n\n:::\n:::\n\n\n### A. Count how many timepoints were measured and how many chicks were on each Diet. \n\n::: {.cell}\n\n```{.r .cell-code}\n# How can you count the timepoints, chicks, and diets, and chicks nested in diets?\n\nChickWeight |> count(Diet)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Diet   n\n1    1 220\n2    2 120\n3    3 120\n4    4 118\n```\n\n\n:::\n\n```{.r .cell-code}\nChickWeight |> count(Time)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Time  n\n1     0 50\n2     2 50\n3     4 49\n4     6 49\n5     8 49\n6    10 49\n7    12 49\n8    14 48\n9    16 47\n10   18 47\n11   20 46\n12   21 45\n```\n\n\n:::\n\n```{.r .cell-code}\nChickWeight |> count(Chick)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Chick  n\n1     18  2\n2     16  7\n3     15  8\n4     13 12\n5      9 12\n6     20 12\n7     10 12\n8      8 11\n9     17 12\n10    19 12\n11     4 12\n12     6 12\n13    11 12\n14     3 12\n15     1 12\n16    12 12\n17     2 12\n18     5 12\n19    14 12\n20     7 12\n21    24 12\n22    30 12\n23    22 12\n24    23 12\n25    27 12\n26    28 12\n27    26 12\n28    25 12\n29    29 12\n30    21 12\n31    33 12\n32    37 12\n33    36 12\n34    31 12\n35    39 12\n36    38 12\n37    32 12\n38    40 12\n39    34 12\n40    35 12\n41    44 10\n42    45 12\n43    43 12\n44    41 12\n45    47 12\n46    49 12\n47    46 12\n48    50 12\n49    42 12\n50    48 12\n```\n\n\n:::\n\n```{.r .cell-code}\nChickWeight |> \n  filter(Time == \"0\") |>\n  count(Diet) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Diet  n\n1    1 20\n2    2 10\n3    3 10\n4    4 10\n```\n\n\n:::\n\n```{.r .cell-code}\nChickWeight |>\n  group_by(Diet) |>\n  summarise(no.chicks = n_distinct(Chick))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 2\n  Diet  no.chicks\n  <fct>     <int>\n1 1            20\n2 2            10\n3 3            10\n4 4            10\n```\n\n\n:::\n\n```{.r .cell-code}\ntable(ChickWeight$Time, ChickWeight$Diet)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    \n      1  2  3  4\n  0  20 10 10 10\n  2  20 10 10 10\n  4  19 10 10 10\n  6  19 10 10 10\n  8  19 10 10 10\n  10 19 10 10 10\n  12 19 10 10 10\n  14 18 10 10 10\n  16 17 10 10 10\n  18 17 10 10 10\n  20 17 10 10  9\n  21 16 10 10  9\n```\n\n\n:::\n:::\n\n\n\n### B. Now figure out which diet leads to the heaviest chicks.\n\n::: {.cell}\n\n```{.r .cell-code}\n# we can plot it to get a first view\nChickWeight |>\n  ggplot(aes(x = Time, y = weight, group = Chick, color = Diet)) + \n  geom_line() +\n  theme_cowplot()\n```\n\n::: {.cell-output-display}\n![](classwork_L03_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nChickWeight |>\n  ggplot(aes(x = Time, y = weight, group = Chick, color = Diet)) + \n  geom_line() +\n  theme_cowplot() +\n  facet_wrap(~ Diet)\n```\n\n::: {.cell-output-display}\n![](classwork_L03_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\n\n\n# How much weight gain from each Diet\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- ChickWeight |> \n  pivot_wider(names_from = Time, names_prefix = \"day_\", values_from = weight)\n\n\ndata <- data |> mutate(weight.gain = day_18 - day_0)\n\ndata |>\n  ggplot(aes(x = Diet, y = weight.gain, fill = Diet)) + \n  geom_boxplot() + \n  geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 3 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](classwork_L03_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmod <- aov(weight.gain ~ Diet, data = data)\n\nsummary(mod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Df Sum Sq Mean Sq F value  Pr(>F)   \nDiet         3  37479   12493    4.63 0.00682 **\nResiduals   43 116029    2698                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n3 observations deleted due to missingness\n```\n\n\n:::\n\n```{.r .cell-code}\nTukeyHSD(mod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = weight.gain ~ Diet, data = data)\n\n$Diet\n         diff       lwr       upr     p adj\n2-1  29.64706 -25.67665  84.97077 0.4867633\n3-1  74.94706  19.62335 130.27077 0.0041372\n4-1  44.54706 -10.77665  99.87077 0.1533433\n3-2  45.30000 -16.78246 107.38246 0.2229497\n4-2  14.90000 -47.18246  76.98246 0.9179605\n4-3 -30.40000 -92.48246  31.68246 0.5626028\n```\n\n\n:::\n\n```{.r .cell-code}\npairwise.t.test(data$weight.gain, data$Diet, p.adjust.method = \"BH\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPairwise comparisons using t tests with pooled SD \n\ndata:  data$weight.gain and data$Diet \n\n  1      2      3     \n2 0.2371 -      -     \n3 0.0046 0.1154 -     \n4 0.1112 0.5247 0.2371\n\nP value adjustment method: BH \n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(lme4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: Matrix\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'Matrix'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(lmerTest)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'lmerTest'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:lme4':\n\n    lmer\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:stats':\n\n    step\n```\n\n\n:::\n\n```{.r .cell-code}\nmod2 <- lmer(weight ~ Diet * Time + (1 | Chick), data = ChickWeight)\nsummary(mod2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: weight ~ Diet * Time + (1 | Chick)\n   Data: ChickWeight\n\nREML criterion at convergence: 5466.9\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.3158 -0.5900 -0.0693  0.5361  3.6024 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n Chick    (Intercept) 545.7    23.36   \n Residual             643.3    25.36   \nNumber of obs: 578, groups:  Chick, 50\n\nFixed effects:\n            Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)  31.5143     6.1163  70.7030   5.152 2.23e-06 ***\nDiet2        -2.8807    10.5479  69.6438  -0.273    0.786    \nDiet3       -13.2640    10.5479  69.6438  -1.258    0.213    \nDiet4        -0.4016    10.5565  69.8601  -0.038    0.970    \nTime          6.7115     0.2584 532.8900  25.976  < 2e-16 ***\nDiet2:Time    1.8977     0.4284 527.6886   4.430 1.15e-05 ***\nDiet3:Time    4.7114     0.4284 527.6886  10.998  < 2e-16 ***\nDiet4:Time    2.9506     0.4340 528.0372   6.799 2.86e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n           (Intr) Diet2  Diet3  Diet4  Time   Dt2:Tm Dt3:Tm\nDiet2      -0.580                                          \nDiet3      -0.580  0.336                                   \nDiet4      -0.579  0.336  0.336                            \nTime       -0.426  0.247  0.247  0.247                     \nDiet2:Time  0.257 -0.431 -0.149 -0.149 -0.603              \nDiet3:Time  0.257 -0.149 -0.431 -0.149 -0.603  0.364       \nDiet4:Time  0.254 -0.147 -0.147 -0.432 -0.595  0.359  0.359\n```\n\n\n:::\n:::\n",
    "supporting": [
      "classwork_L03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}