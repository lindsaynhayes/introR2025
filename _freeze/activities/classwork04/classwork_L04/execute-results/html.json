{
  "hash": "66985d2a54cd754488a6cf9232d1a946",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Visualization with ggplot2\"\nauthor: \"Lindsay N. Hayes\"\ndate: 2025-07-10\ndraft: false\neditor_options: \n  chunk_output_type: console\n---\n\n\n## About the activity\n\n1)  Access the Quarto document [here](https://github.com/lindsaynhayes/introR2025/blob/main/activities/classwork04/classwork_L04.qmd).\n\n2)  Download the raw file.\n\n3) Open it in RStudio.\n\nWe will work our way through this quarto document together during class. The activity will cover plotting data with ggplot2!\n\n## Load the Packages\nThe `tidyverse` library includes `ggplot2` and I added `cowplot` to make the plots prettier. We will use data from the `palmerpenguins` and the `taylor` packages.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(cowplot)\nlibrary(palmerpenguins)\nlibrary(taylor)\n```\n:::\n\n\n## Histogram & Density plots\nUse the `palmerpenguins` data to plot some histograms. Histograms are good for evaluating the distribution of continuous data.\n\n#### 1. How would you describe the distribution? Is it uni-modal or bi-modal?\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n1 Adelie  Torgersen           39.1          18.7               181        3750\n2 Adelie  Torgersen           39.5          17.4               186        3800\n3 Adelie  Torgersen           40.3          18                 195        3250\n4 Adelie  Torgersen           NA            NA                  NA          NA\n5 Adelie  Torgersen           36.7          19.3               193        3450\n6 Adelie  Torgersen           39.3          20.6               190        3650\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n\n```{.r .cell-code}\n# plot the distribution of the penguins' body mass using geom_histogram()\n\nggplot(penguins, aes(x = body_mass_g)) + geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](classwork_L04_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# lets make the plot and the code a little more pretty (note tidy syntax is to put each element on a new line, the \"+\" wraps the text)\n\nggplot(penguins, aes(x = body_mass_g)) + \n  geom_histogram(fill = \"deeppink\") + \n  theme_cowplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](classwork_L04_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# histograms are impacted by the \"bin\" or how each bar is averaging (how thick the bars are). We can change that will `bin` or `binwidth`\n\nggplot(penguins, aes(x = body_mass_g)) + \n  geom_histogram(binwidth = 25, fill = \"deeppink\") + \n  theme_cowplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](classwork_L04_files/figure-html/unnamed-chunk-1-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# add some more labels\n\nggplot(penguins, aes(x = body_mass_g)) + \n  geom_histogram(binwidth = 50, fill = \"deeppink\") + \n  theme_cowplot() +\n  labs(title = \"Distribution of Penguin Body Mass\",\n         x = \"Body Mass (g)\",\n         y =\"Count\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](classwork_L04_files/figure-html/unnamed-chunk-1-4.png){width=672}\n:::\n:::\n\n\n#### 2. Plot the other penguin bill and flipper measurements? What are their distribution? How does the binwidth change the interpretation of the distributions? Are they bi-modal or uni-modal?\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n1 Adelie  Torgersen           39.1          18.7               181        3750\n2 Adelie  Torgersen           39.5          17.4               186        3800\n3 Adelie  Torgersen           40.3          18                 195        3250\n4 Adelie  Torgersen           NA            NA                  NA          NA\n5 Adelie  Torgersen           36.7          19.3               193        3450\n6 Adelie  Torgersen           39.3          20.6               190        3650\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n\n#### 3. A benefit of geom_density() is that the plots are not dependent on the binsize. Compare the histograms and the density plots for each data feature.\n\n::: {.cell}\n\n```{.r .cell-code}\n# Hint. Change geom_histogram to geom_density\n```\n:::\n\n\n#### 4. Where do you think the bimodal distributions may come from? Lets check the distribution across different species. Add `fill = species` to the `aes()` so we can see how the distributions change across species of penguins. \n\n::: {.cell}\n\n```{.r .cell-code}\n# Hint: add an `alpha` to the geom_density to sets the opacity of the density plots. \n```\n:::\n\n\n\n\n\n## Barplots of Categorical data\nAnother type of distribution and count data is of categorical data. Count data for categorical data is best displayed in barplots\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# some tidying\ntaylor_album_songs$key <- str_sub(taylor_album_songs$key_name, 1, 1)\ntaylor_album_songs$album_name <- fct_inorder(taylor_album_songs$album_name)\n\n# You can see both the difference in the number of songs per album, but also in the numbers in each key. \n\nggplot(taylor_album_songs, aes(y = album_name, fill = key)) + \n  geom_bar() +\n  theme_cowplot() +\n  labs(title = \"Keys of TS albums\",\n       x = \"Count\", \n       y = \"\") + scale_fill_brewer(palette=\"Set2\")\n```\n\n::: {.cell-output-display}\n![](classwork_L04_files/figure-html/unnamed-chunk-5-1.png){width=768}\n:::\n\n```{.r .cell-code}\n# Now lest look at the proportions\nggplot(taylor_album_songs, aes(y = album_name, fill = key)) + \n  geom_bar(position = \"fill\") +\n  theme_cowplot() +\n  labs(title = \"Keys of TS albums\",\n       x = \"Proportion\", \n       y = \"\") + scale_fill_brewer(palette=\"Set2\")\n```\n\n::: {.cell-output-display}\n![](classwork_L04_files/figure-html/unnamed-chunk-5-2.png){width=768}\n:::\n:::\n\n\n#### 5. What factors distinguish Ideal cut versus Good cut diamonds? \nUsing the `diamonds` dataset, determine the distribution of the `cut`, `color`, and `clarity` of diamonds.\n\n::: {.cell}\n\n```{.r .cell-code}\n# Hint: first look at the distribution of each characteristic\n\n\n\n# Hint: Now plot two of the variables using geom_bar() and the other as a fill color\n```\n:::\n\n\n\n## Boxplots! \nThe best way to view group differences.\n\n#### 6. Does the bill length and depth, the flipper length, or the body mass differ across species of penguins? \n\nUsing the `penguins` dataset use geom_boxplot() to find out if there is a difference in the penguin features between different species of penguins \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Hint: plot the species as a categorical feature and the bill and the bill adn flipper as the continuous variable. \n```\n:::\n\n\n*Isn't this better than bar graphs??!!!*\n\n**Note: `geom_violin()` can also be a good alternative to a boxplot if you have a very large sample size, such as in single cell RNA sequencing or flow cytometry data. Try the plots as a `geom_violin()` instead of `geom_boxplot()`.**\n\n\n## Scatter and Line Plots \nLooking at 2 continuous variables and their relationship to one another. \n\n#### 7. Using the `iris` dataset use to find out the relationship between `Sepal.Length`, `Sepal.Width`, `Petal.Length`, and Petal.Width` and how that relationship changes across different `Species` of iris flowers. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n```\n\n\n:::\n\n```{.r .cell-code}\nggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, color = Species, group = Species)) + \n  geom_point() + \n  geom_smooth(method = lm) +\n  theme_cowplot() +\n  labs( x = \"Sepal Length (mm)\", y= \"Sepal Width (mm)\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](classwork_L04_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(iris, aes(x = Petal.Length, y = Petal.Width, color = Species, group = Species)) + \n  geom_point() + \n  geom_smooth(method = lm) +\n  theme_cowplot() +\n  labs( x = \"Petal Length (mm)\", y= \"Petal Width (mm)\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](classwork_L04_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n:::\n\n\n\n#### 8. Now use the `ChickWeight` data to determine which `Diet` lead to the greatest `weight` gain over `Time.` Remember to take into account repeated measures across `Chick`\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Sonoma 14.5\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: America/Chicago\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] taylor_3.2.0         palmerpenguins_0.1.1 cowplot_1.1.3       \n [4] lubridate_1.9.4      forcats_1.0.0        stringr_1.5.1       \n [7] dplyr_1.1.4          purrr_1.0.4          readr_2.1.5         \n[10] tidyr_1.3.1          tibble_3.2.1         ggplot2_3.5.1       \n[13] tidyverse_2.0.0     \n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4         generics_0.1.3     stringi_1.8.4      lattice_0.22-6    \n [5] hms_1.1.3          digest_0.6.37      magrittr_2.0.3     evaluate_1.0.3    \n [9] grid_4.4.1         timechange_0.3.0   RColorBrewer_1.1-3 fastmap_1.2.0     \n[13] Matrix_1.7-2       jsonlite_1.9.1     mgcv_1.9-1         scales_1.3.0      \n[17] cli_3.6.4          rlang_1.1.5        munsell_0.5.1      splines_4.4.1     \n[21] withr_3.0.2        yaml_2.3.10        tools_4.4.1        tzdb_0.4.0        \n[25] colorspace_2.1-1   vctrs_0.6.5        R6_2.6.1           lifecycle_1.0.4   \n[29] htmlwidgets_1.6.4  pkgconfig_2.0.3    pillar_1.10.1      gtable_0.3.6      \n[33] glue_1.8.0         xfun_0.51          tidyselect_1.2.1   rstudioapi_0.17.1 \n[37] knitr_1.50         farver_2.1.2       htmltools_0.5.8.1  nlme_3.1-167      \n[41] rmarkdown_2.29     labeling_0.4.3     compiler_4.4.1    \n```\n\n\n:::\n:::\n",
    "supporting": [
      "classwork_L04_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}