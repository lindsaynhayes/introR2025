{
  "hash": "152658eb6f68a8af9d691f4891b3e7d6",
  "result": {
    "engine": "knitr",
    "markdown": "title: \"R & RStudio\"\nsubtitle: \"01-RStudio\"\ndescription: \"Welcome to R and R Studio\"\nauthor: \n  - name: Lindsay Hayes\n    url: https://lindsaynhayes.github.io\n    affiliation: Department of Cell Biology, OUHSC\ndate: 2025-07-01\ndraft: true\n\n---\n\n::: {.cell}\n\n:::\n\n# Welcome to R/RStudio\n\nWhat is R and RStudio and why is it important to learn and implement in all your data analysis pipelines from simple to complex? The reading below and the the materials covered during this course will answer this very question. \n\n::: callout-note\n### Learning objectives\n\n**At the end of this lesson you will:**\n\n-   Describe the purpose of the RStudio Script, Console, Environment, and Plots panes.\n-   Organize files and directories for a set of analyses as an R project, and understand the purpose of the working directory.\n-   Use the built-in RStudio help interface to search for more information on R functions.\n-   Demonstrate how to provide sufficient information for troubleshooting with the R user community.\n\n:::\n\n## What is R? What is RStudio?\n\nThe term [R](https://www.r-project.org/) is used to refer to the\n*programming language*, the *environment for statistical computing*\nand *the software* that interprets the scripts written using it.\n\n[RStudio](https://rstudio.com) is currently a very popular way to not\nonly write your R scripts but also to interact with the R\nsoftware[^plainr]. To function correctly, RStudio needs R and\ntherefore both need to be installed on your computer.\n\n[^plainr]: As opposed to using R directly from the command line\nconsole. There exist other software that interface and integrate\nwith R, but RStudio is particularly well suited for beginners\nwhile providing numerous very advanced features.\n\nThe [RStudio IDE Cheat\nSheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/rstudio-ide.pdf)\nprovides much more information than will be covered here, but can be\nuseful to learn keyboard shortcuts and discover new features.\n\n## Why learn R?\n\n### R does not involve lots of pointing and clicking, and that's a good thing\n\nThe learning curve might be steeper than with other software, but with\nR, the results of your analysis do not rely on remembering a\nsuccession of pointing and clicking, but instead on a series of\nwritten commands, and that's a good thing! So, if you want to redo\nyour analysis because you collected more data, you don't have to\nremember which button you clicked in which order to obtain your\nresults; you just have to run your script again.\n\nWorking with scripts makes the steps you used in your analysis clear,\nand the code you write can be inspected by someone else who can give\nyou feedback and spot mistakes.\n\nWorking with scripts forces you to have a deeper understanding of what\nyou are doing, and facilitates your learning and comprehension of the\nmethods you use.\n\n### R code is great for reproducibility\n\nReproducibility means that someone else (including your future self) can\nobtain the same results from the same dataset when using the same\nanalysis code.\n\nR integrates with other tools to generate manuscripts or reports from your\ncode. If you collect more data, or fix a mistake in your dataset, the\nfigures and the statistical tests in your manuscript or report are updated\nautomatically.\n\nAn increasing number of journals and funding agencies expect analyses\nto be reproducible, so knowing R will give you an edge with these\nrequirements.\n\n### R is interdisciplinary and extensible\n\nWith 10000+ packages that can be installed to extend its\ncapabilities, R provides a framework that allows you to combine\nstatistical approaches from many scientific disciplines to best suit\nthe analytical framework you need to analyse your data. For instance,\nR has packages for image analysis, GIS, time series, population\ngenetics, and a lot more.\n\n### R works on data of all shapes and sizes\n\nThe skills you learn with R scale easily with the size of your\ndataset. Whether your dataset has hundreds or millions of lines, it\nwon't make much difference to you.\n\nR is designed for data analysis. It comes with special data structures\nand data types that make handling of missing data and statistical\nfactors convenient.\n\nR can connect to spreadsheets, databases, and many other data formats,\non your computer or on the web.\n\n### R produces high-quality graphics\n\nThe plotting functionalities in R are extensive, and allow you to adjust\nany aspect of your graph to convey most effectively the message from\nyour data.\n\n### R has a large and welcoming community\n\nThousands of people use R daily. Many of them are willing to help you\nthrough mailing lists and websites such as [Stack\nOverflow](https://stackoverflow.com/), or on the [RStudio\ncommunity](https://community.rstudio.com/). These broad user communities\nextend to specialised areas such as bioinformatics. One such subset of the R community is [Bioconductor](https://bioconductor.org/), a scientific project for analysis and comprehension \"of data from current and emerging biological assays.\"\n\n### Not only is R free, but it is also open-source and cross-platform\n\nAnyone can inspect the source code to see how R works. Because of this\ntransparency, there is less chance for mistakes, and if you (or\nsomeone else) find some, you can report and fix bugs.\n\n\n## Navigating RStudio\nWe will use the RStudio IDE to write code, navigate the files on our computer, inspect the variables we are going to create, and visualize the plots we will generate.\n\n\n\n## References \n\n::: callout-tip\n### References\n\n**Content pulled from**\n\n-   swcarpentry <https://carpentries-incubator.github.io/bioc-intro/20-r-rstudio.html#why-learn-r>\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}