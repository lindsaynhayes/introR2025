{
  "hash": "ae42e8df7f09a6ea696c37cbb789b594",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Retrieving data from APIs with `httr2`\"\nauthor: \n  - name: Stephanie Hicks\n    url: https://www.stephaniehicks.com\n    affiliation: Department of Biostatistics, Johns Hopkins\n    affiliation_url: https://publichealth.jhu.edu\ndescription: \"Introduction to JSON files and interacting with APIs with `httr2`\"\ndate: 2024-11-07\n---\n\n\n\nBefore we begin, let's load a few R packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(jsonlite)\nlibrary(httr2)\n```\n:::\n\n\n\n\n# Motivation\n\nToday, we are going to talk about getting data from APIs and\nexamples of common data formats. \n\nFirst, let's have a bit of a philosophical discussion about data. \n\n## \"Raw\" vs \"Clean\" data\n\nAs data analysts, this is what we wished data \nlooked like whenever we start a project\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](https://github.com/jtleek/advdatasci/raw/master/imgs/tidy-data-example.png)\n:::\n:::\n\n\n\nHowever, the reality, is data is rarely in that \nform in comes in all types of _\"raw\"_ formats that \nneed to be transformed into a _\"clean\"_ format. \n\nFor example, in field of genomics, raw data \nlooks like something like this: \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](https://github.com/jtleek/advdatasci/raw/master/imgs/fastq.png)\n:::\n:::\n\n\n\nOr if you are interested in analyzing data from \nTwitter: \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](https://github.com/jtleek/advdatasci/raw/master/imgs/twitter-api.png)\n:::\n:::\n\n\n\nOr data from Electronic Healthcare Records (EHRs): \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](https://github.com/jtleek/advdatasci/raw/master/imgs/ehr.png)\n:::\n:::\n\n\n\nWe all have our scary spreadsheet tales. Here is \nJenny Bryan from Posit and UBC actually asking \nfor some of those spreadsheet tales on twitter. \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](https://github.com/jtleek/advdatasci/raw/master/imgs/spreadsheet-tales.png)\n:::\n:::\n\n\n\nFor example, this is an actual \n[spreadsheet from Enron in 2001](https://github.com/jennybc/2016-06_spreadsheets/blob/master/2016-06_useR-stanford.pdf): \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](https://github.com/jtleek/advdatasci/raw/master/imgs/enron-spreadsheet.png)\n:::\n:::\n\n\n\n## What do we mean by \"raw\" data? \n\nFrom [https://simplystatistics.org/posts/2016-07-20-relativity-raw-data/](https://simplystatistics.org/posts/2016-07-20-relativity-raw-data/)\nraw data is defined as data... \n\n> ...if you have done no processing, manipulation, coding, or analysis of the data. In other words, the file you received from the person before you is untouched. But it may not be the rawest version of the data. The person who gave you the raw data may have done some computations. They have a different \"raw data set\".\n\n## Where do data live? \n\nData lives anywhere and everywhere. Data \nmight be stored simply in a `.csv` or `.txt`\nfile. Data might be stored in an Excel or \nGoogle Spreadsheet. Data might be stored in \nlarge databases that require users to write \nspecial functions to interact with to extract \nthe data they are interested in. \n\nFor example, you may have heard of the terms \n`mySQL` or `MongoDB`. \n\nFrom [Wikipedia, MySQL](https://en.wikipedia.org/wiki/MySQL) \nis defined as _an open-source relational database management system (RDBMS). Its name is a combination of \"My\", the name of co-founder Michael Widenius's daughter,[7] and \"SQL\", the abbreviation for Structured Query Language_. \n\nFrom [Wikipeda, MongoDB](https://en.wikipedia.org/wiki/MongoDB)\nis defined as _\"a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemata.\"_\n\nSo after reading that, we get the sense that there\nare multiple ways large databases can be structured, \ndata can be formatted and interacted with. \nIn addition, we see that database programs \n(e.g. MySQL and MongoDB) can also interact \nwith each other.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](https://github.com/jtleek/advdatasci/raw/master/imgs/databases.png)\n:::\n:::\n\n\n\nWe will learn more about `JSON` today and learn about `SQL` in a later lecture more formally. \n\n# Best practices on sharing data\n\nA great article in PeerJ was written \ntitled [_How to share data for collaboration_](https://peerj.com/preprints/3139v5.pdf), \nin which the authors describe a set of guidelines\nfor sharing data:\n\n> We highlight the need to provide raw data to the statistician, the importance of consistent formatting, and the necessity of including all essential experimental information and pre-processing steps carried out to the statistician. With these guidelines we hope to avoid errors and delays in data analysis. the importance of consistent formatting, and the necessity of including all essential experimental information and pre-processing steps carried out to the statistician.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](https://github.com/jtleek/advdatasci/raw/master/imgs/ellis-datashare.png)\n:::\n:::\n\n\n\nIt's a great paper that describes the information \nyou should pass to a statistician to facilitate \nthe most efficient and timely analysis. \n\nSpecifically:\n\n1. The raw data (or the rawest form of the data to which you have access)\n    * Should not have modified, removed or summarized any data; Ran no software on data\n    * e.g. strange binary file your measurement machine spits out\n    * e.g. complicated JSON file you scrapped from Twitter Application Programming Interfaces (API)\n    * e.g. hand-entered numbers you collected looking through a microscope\n\n2. A clean data set\n    * This may or may not be transforming data into a `tidy` dataset, but possibly yes\n\n3. A code book describing each variable and its values in the clean or tidy data set.\n    * More detailed information about the measurements in the data set (e.g. units, experimental design, summary choices made)\n    * Doesn't quite fit into the column names in the spreadsheet\n    * Often reported in a `.md`, `.txt` or Word file. \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](https://github.com/jtleek/advdatasci/raw/master/imgs/code-book.png)\n:::\n:::\n\n\n\n4. An explicit and exact recipe you used to go from 1 -> 2,3\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](https://github.com/jtleek/advdatasci/raw/master/imgs/recipe-best.png)\n:::\n:::\n\n\n\n# Getting data\n\n## JSON files \n\nJSON (or JavaScript Object Notation) is a file\nformat that stores information in human-readable, \norganized, logical, easy-to-access manner.\n\nFor example, here is what a JSON file looks \nlike: \n\n``` md\nvar stephanie = {\n\t\"job-title\" : \"Associate Professor\",\n\t\"hometown\" : \"Baltimore, MD\",\n\t\"pronouns\": \"she/her\",\n  \"states-lived\" : {\n    \"state1\" : \"Louisiana\",\n    \"state2\" : \"Texas\",\n    \"state3\" : \"Massachusetts\",\n    \"state4\" : \"Maryland\"\n  }\n}\n```\n\nSome features about `JSON` objects: \n\n* JSON objects are surrounded by curly braces `{}`\n* JSON objects are written in key/value pairs\n* Keys must be strings, and values must be a valid JSON data type (string, number, object, array, boolean)\n* Keys and values are separated by a colon\n* Each key/value pair is separated by a comma\n\n\n\n## Overview of APIs\n\n[From AWS](https://aws.amazon.com/what-is/api/), API stands for **Application Programming Interface**. \n\n- \"Application\" = any **software** with a distinct function\n- \"Interface\" = a **contract of service** between two applications. This contract defines how the two communicate with each other using requests and responses. \n\nThe **API documentation** contains information on how developers are to structure those requests and responses.\n\n:::{.callout-tip}\n\n### Purpose of APIs\n\nThe purpose of APIs is enable two software components to communicate with each other using a set of definitions and protocols. \n\nFor example, the weather bureau’s software system contains daily weather data. The weather app on your phone \"talks\" to this system via APIs and shows you daily weather updates on your phone.\n\n:::\n\n\n### How do APIs work?\n\nTo understand how APIs work, two terms that are important are \n\n1. **client**. This is the application sending the request.\n2. **server**. This is the application sending the response.\n\nSo in the weather example, the bureau's weather database is the server, and the mobile app is the client. \n\n### Four types of API architectures\n\nThere are four different ways that APIs can work depending on when and why they were created.\n\n1. **SOAP APIs**. These APIs use **Simple Object Access Protocol**. Client and server exchange messages using XML. This is a less flexible API that was more popular in the past.\n\n2. **RPC APIs**. These APIs are called **Remote Procedure Calls**. The client completes a function (or procedure) on the server, and the server sends the output back to the client.\n\n3. **Websocket APIs**. Websocket API is another **modern web** API development that uses JSON objects to pass data. A WebSocket API supports two-way communication between client apps and the server. The server can send callback messages to connected clients, making it more efficient than REST API.\n\n4. **REST APIs**. REST stands for **Representational State Transfer** (and are the most popular and flexible APIs). The client sends requests to the server as data. The server uses this client input to start internal functions and returns output data back to the client. REST defines a set of functions like GET, PUT, DELETE, etc. that clients can use to access server data. Clients and servers exchange data using HTTP.\n\nThe main feature of REST API is **statelessness** (i.e. servers do not save client data between requests). Client requests to the server are similar to URLs you type in your browser to visit a website. The response from the server is plain data, without the typical graphical rendering of a web page.\n\n\n### How to use an API?\n\nThe basic steps to using an API are:\n\n1. **Obtaining an API key**. This is done by creating a verified account with the API provider.\n2. **Set up an HTTP API client**. This tool allows you to structure API requests easily using the API keys received. Here, we will use functions from the `httr2` package (which is the next generation of the `httr` package). \n3. If you don’t have an API client, you can try to structure the request yourself in your browser by referring to the API documentation.\n4. Once you are comfortable with the new API syntax, you can start using it in your code.\n\n\n### Where can I find new APIs?\n\nNew web APIs can be found on API marketplaces and API directories, such as:\n\n- [Rapid API](https://rapidapi.com/) – One of the largest global API markets (10k+ public APIs). Users to test APIs directly on the platform before committing to purchase.\n- [Public REST APIs](https://documenter.getpostman.com/view/8854915/Szf7znEe) – Groups REST APIs into categories, making it easier to browse and find the right one to meet your needs.\n- [APIForThat](https://apiforthat.posthaven.com/) and [APIList](https://apilist.fun) – Both these websites have lists of 500+ web APIs, along with in-depth information on how to use them.    \n\n\n# GitHub API\n\nThe [GitHub REST API](https://docs.github.com/en/rest) may be of interest when studying online communities, working methods, organizational structures, communication and discussions, etc. with a focus on (open-source) software development. \n\nMany projects that are hosted on GitHub are open-source projects with a transparent development process and communications. For private projects, which can also be hosted on GitHub, there’s understandably only a few aggregate data available.\n\nLet's say we want to use the [GitHub REST API](https://docs.github.com/en/rest) to find out how many of my GitHub repositories have open issues? \n\n:::{.callout-tip}\n\n### Pro-tip\n\nThe API can be used for free and you can send up to 60 requests per hour if you are not authenticated (i.e. if you don’t provide an API key). \n\nFor serious data collection, this is not much, so it is recommended to sign up on GitHub and generate a personal access token that acts as API key. \n\nThis token can then be used to authenticate your API requests. Your quota is then 5000 requests per hour.\n\n:::\n\n## Access the API from R\n\nThere are packages for many programming languages that provide convenient access for communicating with the GitHub API, but there are no such packages (that I'm aware of) for accessing the API from R.  \n\nThis means we can only access the API directly, e.g. by using the [`jsonlite`](https://cran.r-project.org/web/packages/jsonlite/index.html) package to fetch the data and convert it to an R `list` or `data.frame`.\n\nSpecifically, we will use the `jsonlite::read_json()` function\nto read a JSON file into a data frame. \n\nThe JSON file is located at <https://api.github.com/users/stephaniehicks/repos>. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngithub_url <- \"https://api.github.com/users/stephaniehicks/repos\"\n\nlibrary(jsonlite)\nlibrary(tidyverse)\njsonData <- read_json(github_url, simplifyVector = TRUE)\nglimpse(jsonData)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30\nColumns: 79\n$ id                          <int> 160194123, 132884754, 647539937, 225501707…\n$ node_id                     <chr> \"MDEwOlJlcG9zaXRvcnkxNjAxOTQxMjM=\", \"MDEwO…\n$ name                        <chr> \"2018-bioinfosummer-scrnaseq\", \"advdatasci…\n$ full_name                   <chr> \"stephaniehicks/2018-bioinfosummer-scrnase…\n$ private                     <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, …\n$ owner                       <df[,19]> <data.frame[26 x 19]>\n$ html_url                    <chr> \"https://github.com/stephaniehicks/201…\n$ description                 <chr> NA, NA, \"Repo to share code for the atlas-…\n$ fork                        <lgl> FALSE, TRUE, FALSE, TRUE, TRUE, FALSE, FAL…\n$ url                         <chr> \"https://api.github.com/repos/stephaniehic…\n$ forks_url                   <chr> \"https://api.github.com/repos/stephaniehic…\n$ keys_url                    <chr> \"https://api.github.com/repos/stephaniehic…\n$ collaborators_url           <chr> \"https://api.github.com/repos/stephaniehic…\n$ teams_url                   <chr> \"https://api.github.com/repos/stephaniehic…\n$ hooks_url                   <chr> \"https://api.github.com/repos/stephaniehic…\n$ issue_events_url            <chr> \"https://api.github.com/repos/stephaniehic…\n$ events_url                  <chr> \"https://api.github.com/repos/stephaniehic…\n$ assignees_url               <chr> \"https://api.github.com/repos/stephaniehic…\n$ branches_url                <chr> \"https://api.github.com/repos/stephaniehic…\n$ tags_url                    <chr> \"https://api.github.com/repos/stephaniehic…\n$ blobs_url                   <chr> \"https://api.github.com/repos/stephaniehic…\n$ git_tags_url                <chr> \"https://api.github.com/repos/stephaniehic…\n$ git_refs_url                <chr> \"https://api.github.com/repos/stephaniehic…\n$ trees_url                   <chr> \"https://api.github.com/repos/stephaniehic…\n$ statuses_url                <chr> \"https://api.github.com/repos/stephaniehic…\n$ languages_url               <chr> \"https://api.github.com/repos/stephaniehic…\n$ stargazers_url              <chr> \"https://api.github.com/repos/stephaniehic…\n$ contributors_url            <chr> \"https://api.github.com/repos/stephaniehic…\n$ subscribers_url             <chr> \"https://api.github.com/repos/stephaniehic…\n$ subscription_url            <chr> \"https://api.github.com/repos/stephaniehic…\n$ commits_url                 <chr> \"https://api.github.com/repos/stephaniehic…\n$ git_commits_url             <chr> \"https://api.github.com/repos/stephaniehic…\n$ comments_url                <chr> \"https://api.github.com/repos/stephaniehic…\n$ issue_comment_url           <chr> \"https://api.github.com/repos/stephaniehic…\n$ contents_url                <chr> \"https://api.github.com/repos/stephaniehic…\n$ compare_url                 <chr> \"https://api.github.com/repos/stephaniehic…\n$ merges_url                  <chr> \"https://api.github.com/repos/stephaniehic…\n$ archive_url                 <chr> \"https://api.github.com/repos/stephaniehic…\n$ downloads_url               <chr> \"https://api.github.com/repos/stephaniehic…\n$ issues_url                  <chr> \"https://api.github.com/repos/stephaniehic…\n$ pulls_url                   <chr> \"https://api.github.com/repos/stephaniehic…\n$ milestones_url              <chr> \"https://api.github.com/repos/stephaniehic…\n$ notifications_url           <chr> \"https://api.github.com/repos/stephaniehic…\n$ labels_url                  <chr> \"https://api.github.com/repos/stephaniehic…\n$ releases_url                <chr> \"https://api.github.com/repos/stephaniehic…\n$ deployments_url             <chr> \"https://api.github.com/repos/stephaniehic…\n$ created_at                  <chr> \"2018-12-03T13:20:45Z\", \"2018-05-10T10:22:…\n$ updated_at                  <chr> \"2019-08-08T02:18:17Z\", \"2018-05-10T10:22:…\n$ pushed_at                   <chr> \"2018-12-05T17:07:09Z\", \"2017-12-18T17:18:…\n$ git_url                     <chr> \"git://github.com/stephaniehicks/2018-bioi…\n$ ssh_url                     <chr> \"git@github.com:stephaniehicks/2018-bioinf…\n$ clone_url                   <chr> \"https://github.com/stephaniehicks/2018-bi…\n$ svn_url                     <chr> \"https://github.com/stephaniehicks/2018-bi…\n$ homepage                    <chr> NA, NA, NA, NA, NA, \"\", NA, NA, NA, NA, NA…\n$ size                        <int> 60296, 172353, 8866, 121, 675, 26688, 20, …\n$ stargazers_count            <int> 4, 0, 2, 1, 0, 0, 1, 8, 0, 1, 0, 15, 3, 0,…\n$ watchers_count              <int> 4, 0, 2, 1, 0, 0, 1, 8, 0, 1, 0, 15, 3, 0,…\n$ language                    <chr> \"TeX\", \"HTML\", \"R\", NA, NA, \"R\", \"R\", \"Jup…\n$ has_issues                  <lgl> TRUE, FALSE, TRUE, FALSE, FALSE, TRUE, TRU…\n$ has_projects                <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, …\n$ has_downloads               <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, …\n$ has_wiki                    <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, …\n$ has_pages                   <lgl> TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, F…\n$ has_discussions             <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, …\n$ forks_count                 <int> 4, 0, 1, 0, 1, 0, 0, 2, 0, 0, 0, 4, 1, 1, …\n$ mirror_url                  <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ archived                    <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, …\n$ disabled                    <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, …\n$ open_issues_count           <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ license                     <df[,5]> <data.frame[26 x 5]>\n$ allow_forking               <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, …\n$ is_template                 <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ web_commit_signoff_required <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, …\n$ topics                      <list> <>, <>, <>, <>, <>, <>, <>, <>, <>, <>, <>…\n$ visibility                  <chr> \"public\", \"public\", \"public\", \"public\", \"p…\n$ forks                       <int> 4, 0, 1, 0, 1, 0, 0, 2, 0, 0, 0, 4, 1, 1,…\n$ open_issues                 <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ watchers                    <int> 4, 0, 2, 1, 0, 0, 1, 8, 0, 1, 0, 15, 3, 0,…\n$ default_branch              <chr> \"master\", \"master\", \"main\", \"master\", \"mas…\n```\n\n\n:::\n:::\n\n\n\nWe see this has returned a data frame with the argument `simplifyVector` which converts the output from a list to a dataframe. \n\nHowever, from here, we see that there are only 30 rows (or 30 repositories). \nIf you look on my github page, you can see there are more than 30 repositories. \n\n- <https://github.com/stephaniehicks?tab=repositories> \n\n\n:::{.callout-tip}\n\n### APIs limit info from users\n\nWhat's happening is called **pagination**. \n\nAt a high-level, the API is limiting the amount of items a user gets and **splitting it into pages**.\n\nFormally, pagination is the process of splitting the contents or a section of a website into discrete pages. Users tend to get lost when there's bunch of data and with pagination splitting they can concentrate on a particular amount of content. Hierarchy and paginated structure improve the readability score of the content.\n\nIn this use case Github api splits the result into 30 items per resonse, depends on the request\n\n:::\n\n\n\n**Solution**: You should explicitly specify in your request how many items you would like to receive from server pagination engine, using formula for Github pagination api: \n\n`?page=1&per_page=<numberOfItemsYouSpecify>\"`\n\nYou can read more about pagination here: \n\n- <https://docs.github.com/en/rest/guides/using-pagination-in-the-rest-api>\n\n\n\n:::{.callout-tip}\n\n### Example\n\nHere we can visit this website: \n\n- <https://api.github.com/users/stephaniehicks/repos?page=1&per_page=1000> \n\nAnd see there are more than 30 repos. Let's read it into R. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngithub_url = \"https://api.github.com/users/stephaniehicks/repos?page=1&per_page=1000\"\n\njsonDataAll <- read_json(github_url, simplifyVector = TRUE)\ndim(jsonDataAll)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 92 79\n```\n\n\n:::\n:::\n\n\n\nWe now get all the public repositories! yay! \n\n:::\n\n\n## Using API keys\n\nAuthenticating with the GitHub API via an API key allows you to send much more requests to the API. \n\nAPI access keys for the GitHub API are called **personal access tokens** (PAT) and the [documentation explains how to generate a PAT](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token) once you have logged into your GitHub account. \n\n:::{.callout-tip}\n\n### Where to store API keys\n\nFirst, **please be careful with your PATs and never publish them.**\n\nIf you want guidance on where you should store them, I like this post: \n\n- <https://www.r-bloggers.com/2015/11/how-to-store-and-use-webservice-keys-and-authentication-details-with-r/> \n\nPersonally, I keep mine in my `.Renviron` file which looks something like this on the inside: \n\n```\nGITHUB_API_KEY = <add my GitHub API key here> \nCENSUS_API_KEY = <add my tidycensus API key here> \nOPENFDA_API_KEY = <add my openFDA API key here> \n```\n\nIf you do not have an `.Renviron` file in your home directory, you can make one: \n\n``` bash\ncd ~\ntouch .Renviron\n```\n\n:::\n\n\nAssuming you have created and stored an API key in the `.Renviron` file in your home directory, you can fetch it with the `Sys.getenv()` function. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngithub_key <- Sys.getenv(\"GITHUB_API_KEY\")\n```\n:::\n\n\n\nWe will use this in a little bit. \n\n## Access APIs with `httr2`\n\nThere are a set of [basic HTTP verbs](https://docs.oracle.com/en/cloud/saas/marketing/eloqua-develop/Developers/GettingStarted/APIRequests/HTTP-verbs.htm) that allow you access a set of **endpoints**. \n\nThe basic request patterns are:\n\n- Retrieve a single item (GET)\n- Retrieve a list of items (GET)\n- Create an item (POST)\n- Update an item (PUT)\n- Delete an item (DELETE)\n\n### Example: GitHub commits\n\nLet’s say you want to retrieve information about the latest commits from a GitHub repository. We will use `httr2` to make a request to the GitHub API for a repository of your choice. Later on we will make this an **authenticated HTTP response** to the GitHub API. \n\nFirst, we make sure we have the `httr2` package installed and loaded. We'll also need `jsonlite` package for handling JSON files and `dplyr` for data wrangling. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(httr2)\nlibrary(jsonlite)\nlibrary(dplyr)\n```\n:::\n\n\n\nNow we will set up our **request** to the GitHub API. The GitHub API endpoint for getting the latest commits in a repository is at `https://api.github.com/repos/{owner}/{repo}/commits`. \n\nFor this example, we’ll look at the latest commits for the tidyverse/dplyr repository. We will use `httr2::request()` function to set up the request, (and later on we will add authentication -- optional, but recommended for higher rate limits), and parse the response.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nowner <- \"tidyverse\"\nrepo <- \"dplyr\"\nurl <- paste0(\"https://api.github.com/repos/\", owner, \"/\", repo, \"/commits\")\n\n\nresponse <- request(url) %>%\n  req_perform()\nresponse\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n<httr2_response>\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGET https://api.github.com/repos/tidyverse/dplyr/commits\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nStatus: 200 OK\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nContent-Type: application/json\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nBody: In memory (146056 bytes)\n```\n\n\n:::\n:::\n\n\n\nNext, we can see if the response was successful. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check if the response was successful\nif (resp_status(response) == 200) {\n  # Parse JSON response into an R list\n  commits <- resp_body_json(response, simplifyVector = TRUE)\n  \n  # View the first few rows of the commits data\n  head(commits)\n} else {\n  message(\"Failed to retrieve data. Status code: \", resp_status(response))\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                       sha\n1 fb25640fa1eb74746a7a74a06090045106e5d20f\n2 e4e9a295a373b85e02ae084a23f12e9212a72b98\n3 1d17672a54305170dc75c251f8ae69a85c0bea37\n4 cfb25a030f9f7c39f77fed2c97f3fa7b15a55e84\n5 85e94fcde02ad49c77510991078899278489fd8f\n6 e0555277878ed174d40bda86690674ecdc27db55\n                                                                node_id\n1 C_kwDOAGIUpdoAKGZiMjU2NDBmYTFlYjc0NzQ2YTdhNzRhMDYwOTAwNDUxMDZlNWQyMGY\n2 C_kwDOAGIUpdoAKGU0ZTlhMjk1YTM3M2I4NWUwMmFlMDg0YTIzZjEyZTkyMTJhNzJiOTg\n3 C_kwDOAGIUpdoAKDFkMTc2NzJhNTQzMDUxNzBkYzc1YzI1MWY4YWU2OWE4NWMwYmVhMzc\n4 C_kwDOAGIUpdoAKGNmYjI1YTAzMGY5ZjdjMzlmNzdmZWQyYzk3ZjNmYTdiMTVhNTVlODQ\n5 C_kwDOAGIUpdoAKDg1ZTk0ZmNkZTAyYWQ0OWM3NzUxMDk5MTA3ODg5OTI3ODQ4OWZkOGY\n6 C_kwDOAGIUpdoAKGUwNTU1Mjc3ODc4ZWQxNzRkNDBiZGE4NjY5MDY3NGVjZGMyN2RiNTU\n    commit.author.name                         commit.author.email\n1        Kirill Müller                           kirill@cynkra.com\n2        Davis Vaughan                           davis@rstudio.com\n3              Mike Du 58779940+ilovemane@users.noreply.github.com\n4                 Adam                       adampeterso@gmail.com\n5 Núria Mercadé-Besora 61558739+nmercadeb@users.noreply.github.com\n6           James Wade                       github@jameshwade.com\n    commit.author.date commit.committer.name commit.committer.email\n1 2024-11-02T17:43:50Z         Kirill Müller      kirill@cynkra.com\n2 2024-10-01T15:53:13Z                GitHub     noreply@github.com\n3 2024-08-27T16:31:39Z                GitHub     noreply@github.com\n4 2024-08-27T16:30:57Z                GitHub     noreply@github.com\n5 2024-08-27T15:51:07Z                GitHub     noreply@github.com\n6 2024-08-27T15:40:46Z                GitHub     noreply@github.com\n  commit.committer.date\n1  2024-11-02T17:44:39Z\n2  2024-10-01T15:53:13Z\n3  2024-08-27T16:31:39Z\n4  2024-08-27T16:30:57Z\n5  2024-08-27T15:51:07Z\n6  2024-08-27T15:40:46Z\ncommit.message\nove to tidyverse, already applied manually to gh-pages\nemove not needed `new_expanded_quosures()` (#7090)\n3                                                                                                                                                                                                                                                                                               Add error message when passing an array in `conditions` (#7069)\\n\\n* add error message when passing a matrix\\r\\n\\r\\ntidyverse day\\r\\n\\r\\n* Update test-vec-case-when.R\\r\\n\\r\\n* fixes\\r\\n\\r\\n* Tweaks\\r\\n\\r\\n* NEWS bullet\\r\\n\\r\\n* Update snap\\r\\n\\r\\n---------\\r\\n\\r\\nCo-authored-by: Davis Vaughan <davis@posit.co>\n4                                                                                                                                                                                                                                                                   Add documentation clarifying appropriate use of weights in `slice_sample()` (#7052)\\n\\n* Add documentation clarifying appropriate use of weights in dplyr's `slice_sample()`.\\r\\n\\r\\n* Add documentation to relevant .Rd file.\\r\\n\\r\\n* Tweak documentation placement a bit\\r\\n\\r\\n---------\\r\\n\\r\\nCo-authored-by: Davis Vaughan <davis@posit.co>\nocument that `group_by()` works with data-masking (#7071)\n6 Add a `ptype` argument to `between()` (#7073)\\n\\n* add ptype argument to between Fixes #6906\\r\\n\\r\\n* update NEWS with ptype argument\\r\\n\\r\\n* document() and add tests\\r\\n\\r\\n* add back see also\\r\\n\\r\\n* add back see also\\r\\n\\r\\n* Redocument\\r\\n\\r\\n* Trim trailing whitespace\\r\\n\\r\\n* Remove extra line\\r\\n\\r\\n* Minor docs tweaks\\r\\n\\r\\n* require names ptype, update tests, update function documentation\\r\\n\\r\\n* remove unnecessary if else blocks\\r\\n\\r\\n* Tweak NEWS bullet\\r\\n\\r\\n* A few more tweaks\\r\\n\\r\\n* Few more tweaks\\r\\n\\r\\n---------\\r\\n\\r\\nCo-authored-by: Davis Vaughan <davis@posit.co>\n                           commit.tree.sha\n1 5aaa2c4dcdabd6c8303b660f15c963740193eb17\n2 8299635297b6b5e61c9522b525a5414993405e08\n3 9144e07c3b09886b79b64a76904501f565f1b6c8\n4 3d6a95112c5bc59e6a60d245704984e722aeacad\n5 852e02c951972c5a4e9a831c68e2425085e7fdd5\n6 18d4e6763ceb64f3967f9addb712ad0878798b38\n                                                                                  commit.tree.url\n1 https://api.github.com/repos/tidyverse/dplyr/git/trees/5aaa2c4dcdabd6c8303b660f15c963740193eb17\n2 https://api.github.com/repos/tidyverse/dplyr/git/trees/8299635297b6b5e61c9522b525a5414993405e08\n3 https://api.github.com/repos/tidyverse/dplyr/git/trees/9144e07c3b09886b79b64a76904501f565f1b6c8\n4 https://api.github.com/repos/tidyverse/dplyr/git/trees/3d6a95112c5bc59e6a60d245704984e722aeacad\n5 https://api.github.com/repos/tidyverse/dplyr/git/trees/852e02c951972c5a4e9a831c68e2425085e7fdd5\n6 https://api.github.com/repos/tidyverse/dplyr/git/trees/18d4e6763ceb64f3967f9addb712ad0878798b38\n                                                                                         commit.url\n1 https://api.github.com/repos/tidyverse/dplyr/git/commits/fb25640fa1eb74746a7a74a06090045106e5d20f\n2 https://api.github.com/repos/tidyverse/dplyr/git/commits/e4e9a295a373b85e02ae084a23f12e9212a72b98\n3 https://api.github.com/repos/tidyverse/dplyr/git/commits/1d17672a54305170dc75c251f8ae69a85c0bea37\n4 https://api.github.com/repos/tidyverse/dplyr/git/commits/cfb25a030f9f7c39f77fed2c97f3fa7b15a55e84\n5 https://api.github.com/repos/tidyverse/dplyr/git/commits/85e94fcde02ad49c77510991078899278489fd8f\n6 https://api.github.com/repos/tidyverse/dplyr/git/commits/e0555277878ed174d40bda86690674ecdc27db55\n  commit.comment_count commit.verification.verified commit.verification.reason\n1                    0                        FALSE                   unsigned\n2                    0                         TRUE                      valid\n3                    0                         TRUE                      valid\n4                    0                         TRUE                      valid\n5                    0                         TRUE                      valid\n6                    0                         TRUE                      valid\ncommit.verification.signature\nn2 -----BEGIN PGP SIGNATURE-----\\n\\nwsFcBAABCAAQBQJm/BrpCRC1aQ7uu5UhlAAApk0QABIAjfuu47L1gaXmicgRMYpN\\nTs1JfHO7zGxafb5QYqgk80yH/w+XsqHt+Q2Xd3JLvIYSWBJ4IAuKU+R4vBOF6yhW\\nDprWxU3K0bLeOc9ycmH21WUPSBNjw/dhyFkMULBa6ZbZhsfPddb8OhPSw02ze/Rw\\n9oQSVIWC5ZGIHwBp4/dvrdmQ7ztwmFnTp8uegpIdLdfpqCereJdV74VYx7TrGYB4\\n/+48s84H2X2p/P3h15riv5t+545uhrMZMP9RspV7etRju4mloG5EP2zpLPgxrCIi\\nLhmpZdjKgrOc0AlocOWyjcGzRLSgExYV0bTeJnTpxqZRsZzkM5JMEGEnPCBP5OD3\\nd+PGv+l7WeOioB8+r5Sz+asoWqEfv2rfrjibqZpT4BSwV+R4+4p0NFtzOZpBzrCz\\nd+7mu0PWyLP4H7RQ0vWNZTMP3YYpQoEL5FX+X9qKKuFnob8n6W4Fje/B1ru4cYip\\nvI7sX43WLQ9X32x7FleFHsFAZDKSg8x/QXlJ2T1/VZSv0ge4M/wg5YmzhPi17xSl\\n7JcizRSKzqZDtDiIZQD2FjnVMNdL1LsjbnbWJGf02KejxFkgsYa2oEos2ekouilL\\n+xswdRrF8Fuh8KNCMc3MGO3nQovjMGgMoaFaYetXhYOTUSGAfQJBOOpNrH0vzf6g\\nOSuaLjJrCYFv0IIxdtrA\\n=kx9G\\n-----END PGP SIGNATURE-----\\n\n3 -----BEGIN PGP SIGNATURE-----\\n\\nwsFcBAABCAAQBQJmzf9rCRC1aQ7uu5UhlAAA+k4QADkSbzuLgeAvxtczSazlRvuW\\nAYPlvaK02ndKbIY8Ucwp/wyTGgorMH2kC3g3r0cy1bwVHvsNp0gt1S3tbxdvXXEA\\n8R0+pHSxgDvzCIkZdE5WJpN1VjQVYAmqRzeVt9ieifuBGVWapIn26fDPndXswPWq\\nQWDKh6tZn5wsfWiclR4TSKIcqOrva7AzegB0iyF/8kKer7jOuG/R5OQoTGJoXwlR\\nzGdI+JxKBnY9Q24SBo5xruKq3LKQIWUiICm48aFQ35JbsT83v+RuiAfMkrn1C0RM\\nQdN0820iz5/oShO5iIXvcIBZSZhSjQ/EQkv394YS0N4gElGwEbXQIOon5nZIzK3d\\n7jtXerms96sjUCOXyb0fB6YnbNEA3/Tiq7x61Fy6uUSrblewhd5AXNZu9/aJwvYv\\nOj1BoMdr/HSIUnHl11+90Y0RIA66WsHNCZLKm3L2DAlYczGmL/zcFNivH/3epmlB\\nMirSkqfuK1AYzaH5z8Fpu9UOkEVw18L+gFwn2fTye3rxzoy6Lr8R9eT/VAUtZCQV\\ng3LurvIWjHe1NNVxeQ702E1ACBXcUhD4Bfqij1QZeEFP7bsIo+ggcyyEIn56ayEO\\nSmGMb76kcBciL44oU8fAuzWK8nVVA54iM4ecJltYhp1o3tOFpJ+fQA4n5hxFYgc4\\nU+1DPZvop1yluVlV1vVV\\n=AwJu\\n-----END PGP SIGNATURE-----\\n\n4 -----BEGIN PGP SIGNATURE-----\\n\\nwsFcBAABCAAQBQJmzf9BCRC1aQ7uu5UhlAAA68AQAEtPIx3MrOwvPhjYi4mbBvZJ\\n/EeNZqaiHoanezr8L+AR0Fym/Asnf5h35+t4PDYU/JqGdND/es0LB6GxH3YMNUsK\\n6PrGbv4CMs3Ary5si5c7ynAlASCnbcMrvbIUM0UWzWd5eV+am0irDFmZc20g5Wt/\\ngZPYGNKK0D3RWM2KP5O6a67zm9ipuqNbAkGRat9qehxvTEblnB/v8jHZGy5WpTjw\\nZDxrdgdCHWCHM48viFsJlbEm8V17tFJ/ipy6JthZy7Ei1JyWpmuc28y3VqrofIDF\\n58OdA6RA7JDvfhWPFKq9RKjgfSXp5hgz+5edSwc9fTS77KL9MDq8ZK+Mhm12F3x+\\nzAb8fdajL4YwTjquwUfKJWYEgrc39vmFo/G84+VtYuRRvi2T8BFlXqTsEw3z109Y\\nfFzem/3R0PFn/+M68dzh931G52JEkhlcowR/Dy+cy1bgnWlEDOHZQQUtFGsuRJ/T\\nxOByNQ3GIiqxR+40VREeByXuCdLCOrD0KiggwNBIbUb9AU4fwvS3LNxDZLMB8gzJ\\n+DRTH/uMwwlySvf/gn5NvlasXVnLSTuMCi/DBEUMFpOkfeUG63stOuiiqn0p9ll8\\nHuAsLVT72uZOYOMiW+MsskehXZKKnOUlzv4JfoakFIEFMwBSDAdfsq9hWYtdZ9so\\ndNwPfMuZLou4JZ4kNJoP\\n=2gy1\\n-----END PGP SIGNATURE-----\\n\n5 -----BEGIN PGP SIGNATURE-----\\n\\nwsFcBAABCAAQBQJmzfXrCRC1aQ7uu5UhlAAAGIkQAAWFfWEtO+rNEL4oWHAm0Fdx\\ncKsyfH/j+eIZDIwJ7KF9hcd1VLeVO96lxCtAqW2/x7lYReM/NyfBtz0nQuwaVM01\\nstesFeyJZDclN2LgHWPwuq9QM3Gt2M1hrmguDvb6oM5rvT2W0XXKNS5TlPKx3TeU\\nZT1RIFfndFuvifQlZjmYMaDI9kLQS8kQtQCTjuv3Ei57uWEAbkj5r2w6SA8HA8Ti\\nQxCOWzQ8FTPqyvb3iev3xLmJvXXNr+AJXbJRkIZA3Pwu8CCOmpmf6H6HeBQqMzaG\\nkjqX5uqzmyAyf38z7Y+yALQkPySQbNp/de2jea1hrq7v2W78cR4+gIzti09Y1Q9R\\nhi5PIXwsykb4XKdZXl3kQfEBxBh7iIbBOglLPHMDRVolQMmj6S9ezjnn0FkpXdKE\\nnCPGPI/+6MzTeSPrinfO7wUpXNQocVwBEUV8Qvv8Rc/uHbKw6FLPofZepJ+Z2UmA\\npyEvwcADNGXhJM8Ef9O3tdDFhdV5bSORW9bhQh97l9yPneB5+Rui1ftiqKjqR0pC\\n9uPNrMoexCc1O/uEv5CotGjViOJrdzbqJxBWO9BD8i8LKNI/Fiuu4OHMQsXwxHye\\nqSPrOx4zrAxrg/qn9hEPQFjj+sHwjUV3dHgpSCSqzmLZzPYrAKQS7BMERogzgNke\\nT9u5cp6sbK4eI414nNvP\\n=4+mC\\n-----END PGP SIGNATURE-----\\n\n6 -----BEGIN PGP SIGNATURE-----\\n\\nwsFcBAABCAAQBQJmzfN+CRC1aQ7uu5UhlAAAL3cQABd/cNjfNWYYv/iRI12OoHJF\\n8Sqp/50IfyuyMgEJT4wGstAUi/Z632TGTQEsEBuvVbrsmlRH6myYEXIUWGEv2RM2\\nD4bgykku0rZCeIJFyMjCrnMK1NYOrp3RoqD7HlWFzvpW5ZzNyXZPwafeYvsakh5K\\nPt1V4WjYzEioPWTJIgAKEUr8Pr3zePCO0zY7NXAhsgobaxUK0PcDoTt0WeHkxhBL\\nwt2f+FylBKSbh3Fw6zv2xINGxEQWwSWa3EZTvsu5s3aTl0OOtz/1vLQ+gCYqhU9Z\\n4VHdgj0j2+AbETBPiou8E/szSuuffRTwgSkobbAkgOF6uyFg3gxRM7zjXsDiN4o6\\nwxNx72y1/tDanfUCRX/e3zcUh8gqtB4RggHoKtdun7UnAck+kgCeMH+ru5eNINxH\\n9K/1xL70FoasI0Kd9k4L0Q2YsoXOhgHVoQFBKC0AgiIWaJrjpx/C+MeMeXj/XgNm\\nQfybWEiXHL9S4jq0Wy/3he0BvwwiHcy682/FyeVx0fxUEHw4DzL0LkcBctm+yUKS\\n3MFADYcgTiVlafXFdej9mtiElSGINNh/C83Vj+LQdG6axzHeiWX6mGiRCgfEZhpT\\n+XhMnpI7XyQoeSyREnuVUx+E2PWsqG0gFocq0KV3UDnc5ZGE3JtH2L9w6CKlW7YA\\n8RlhDNCiHgAk2O7S2iE/\\n=Z8qV\\n-----END PGP SIGNATURE-----\\n\ncommit.verification.payload\nntree 8299635297b6b5e61c9522b525a5414993405e08\\nparent 1d17672a54305170dc75c251f8ae69a85c0bea37\\nauthor Davis Vaughan <davis@rstudio.com> 1727797993 -0400\\ncommitter GitHub <noreply@github.com> 1727797993 -0400\\n\\nRemove not needed `new_expanded_quosures()` (#7090)\\n\\n\n3                                                                                                                                                                                                                                                                            tree 9144e07c3b09886b79b64a76904501f565f1b6c8\\nparent cfb25a030f9f7c39f77fed2c97f3fa7b15a55e84\\nauthor Mike Du <58779940+ilovemane@users.noreply.github.com> 1724776299 +0100\\ncommitter GitHub <noreply@github.com> 1724776299 -0400\\n\\nAdd error message when passing an array in `conditions` (#7069)\\n\\n* add error message when passing a matrix\\r\\n\\r\\ntidyverse day\\r\\n\\r\\n* Update test-vec-case-when.R\\r\\n\\r\\n* fixes\\r\\n\\r\\n* Tweaks\\r\\n\\r\\n* NEWS bullet\\r\\n\\r\\n* Update snap\\r\\n\\r\\n---------\\r\\n\\r\\nCo-authored-by: Davis Vaughan <davis@posit.co>\n4                                                                                                                                                                                                                                                                         tree 3d6a95112c5bc59e6a60d245704984e722aeacad\\nparent 85e94fcde02ad49c77510991078899278489fd8f\\nauthor Adam <adampeterso@gmail.com> 1724776257 -0400\\ncommitter GitHub <noreply@github.com> 1724776257 -0400\\n\\nAdd documentation clarifying appropriate use of weights in `slice_sample()` (#7052)\\n\\n* Add documentation clarifying appropriate use of weights in dplyr's `slice_sample()`.\\r\\n\\r\\n* Add documentation to relevant .Rd file.\\r\\n\\r\\n* Tweak documentation placement a bit\\r\\n\\r\\n---------\\r\\n\\r\\nCo-authored-by: Davis Vaughan <davis@posit.co>\ntree 852e02c951972c5a4e9a831c68e2425085e7fdd5\\nparent e0555277878ed174d40bda86690674ecdc27db55\\nauthor Núria Mercadé-Besora <61558739+nmercadeb@users.noreply.github.com> 1724773867 +0100\\ncommitter GitHub <noreply@github.com> 1724773867 -0400\\n\\nDocument that `group_by()` works with data-masking (#7071)\\n\\n\n6 tree 18d4e6763ceb64f3967f9addb712ad0878798b38\\nparent 173b4232bff810f563e1739211ea7545ed0651e6\\nauthor James Wade <github@jameshwade.com> 1724773246 -0400\\ncommitter GitHub <noreply@github.com> 1724773246 -0400\\n\\nAdd a `ptype` argument to `between()` (#7073)\\n\\n* add ptype argument to between Fixes #6906\\r\\n\\r\\n* update NEWS with ptype argument\\r\\n\\r\\n* document() and add tests\\r\\n\\r\\n* add back see also\\r\\n\\r\\n* add back see also\\r\\n\\r\\n* Redocument\\r\\n\\r\\n* Trim trailing whitespace\\r\\n\\r\\n* Remove extra line\\r\\n\\r\\n* Minor docs tweaks\\r\\n\\r\\n* require names ptype, update tests, update function documentation\\r\\n\\r\\n* remove unnecessary if else blocks\\r\\n\\r\\n* Tweak NEWS bullet\\r\\n\\r\\n* A few more tweaks\\r\\n\\r\\n* Few more tweaks\\r\\n\\r\\n---------\\r\\n\\r\\nCo-authored-by: Davis Vaughan <davis@posit.co>\n                                                                                            url\n1 https://api.github.com/repos/tidyverse/dplyr/commits/fb25640fa1eb74746a7a74a06090045106e5d20f\n2 https://api.github.com/repos/tidyverse/dplyr/commits/e4e9a295a373b85e02ae084a23f12e9212a72b98\n3 https://api.github.com/repos/tidyverse/dplyr/commits/1d17672a54305170dc75c251f8ae69a85c0bea37\n4 https://api.github.com/repos/tidyverse/dplyr/commits/cfb25a030f9f7c39f77fed2c97f3fa7b15a55e84\n5 https://api.github.com/repos/tidyverse/dplyr/commits/85e94fcde02ad49c77510991078899278489fd8f\n6 https://api.github.com/repos/tidyverse/dplyr/commits/e0555277878ed174d40bda86690674ecdc27db55\n                                                                            html_url\n1 https://github.com/tidyverse/dplyr/commit/fb25640fa1eb74746a7a74a06090045106e5d20f\n2 https://github.com/tidyverse/dplyr/commit/e4e9a295a373b85e02ae084a23f12e9212a72b98\n3 https://github.com/tidyverse/dplyr/commit/1d17672a54305170dc75c251f8ae69a85c0bea37\n4 https://github.com/tidyverse/dplyr/commit/cfb25a030f9f7c39f77fed2c97f3fa7b15a55e84\n5 https://github.com/tidyverse/dplyr/commit/85e94fcde02ad49c77510991078899278489fd8f\n6 https://github.com/tidyverse/dplyr/commit/e0555277878ed174d40bda86690674ecdc27db55\n                                                                                            comments_url\n1 https://api.github.com/repos/tidyverse/dplyr/commits/fb25640fa1eb74746a7a74a06090045106e5d20f/comments\n2 https://api.github.com/repos/tidyverse/dplyr/commits/e4e9a295a373b85e02ae084a23f12e9212a72b98/comments\n3 https://api.github.com/repos/tidyverse/dplyr/commits/1d17672a54305170dc75c251f8ae69a85c0bea37/comments\n4 https://api.github.com/repos/tidyverse/dplyr/commits/cfb25a030f9f7c39f77fed2c97f3fa7b15a55e84/comments\n5 https://api.github.com/repos/tidyverse/dplyr/commits/85e94fcde02ad49c77510991078899278489fd8f/comments\n6 https://api.github.com/repos/tidyverse/dplyr/commits/e0555277878ed174d40bda86690674ecdc27db55/comments\n  author.login author.id       author.node_id\n1       krlmlr   1741643 MDQ6VXNlcjE3NDE2NDM=\n2 DavisVaughan  19150088 MDQ6VXNlcjE5MTUwMDg4\n3    ilovemane  58779940 MDQ6VXNlcjU4Nzc5OTQw\n4  apeterson91   4251291 MDQ6VXNlcjQyNTEyOTE=\n5    nmercadeb  61558739 MDQ6VXNlcjYxNTU4NzM5\n6   JamesHWade   6314313 MDQ6VXNlcjYzMTQzMTM=\n                                     author.avatar_url author.gravatar_id\n1  https://avatars.githubusercontent.com/u/1741643?v=4                   \n2 https://avatars.githubusercontent.com/u/19150088?v=4                   \n3 https://avatars.githubusercontent.com/u/58779940?v=4                   \n4  https://avatars.githubusercontent.com/u/4251291?v=4                   \n5 https://avatars.githubusercontent.com/u/61558739?v=4                   \n6  https://avatars.githubusercontent.com/u/6314313?v=4                   \n                                 author.url                 author.html_url\n1       https://api.github.com/users/krlmlr       https://github.com/krlmlr\n2 https://api.github.com/users/DavisVaughan https://github.com/DavisVaughan\n3    https://api.github.com/users/ilovemane    https://github.com/ilovemane\n4  https://api.github.com/users/apeterson91  https://github.com/apeterson91\n5    https://api.github.com/users/nmercadeb    https://github.com/nmercadeb\n6   https://api.github.com/users/JamesHWade   https://github.com/JamesHWade\n                                 author.followers_url\n1       https://api.github.com/users/krlmlr/followers\n2 https://api.github.com/users/DavisVaughan/followers\n3    https://api.github.com/users/ilovemane/followers\n4  https://api.github.com/users/apeterson91/followers\n5    https://api.github.com/users/nmercadeb/followers\n6   https://api.github.com/users/JamesHWade/followers\n                                              author.following_url\n1       https://api.github.com/users/krlmlr/following{/other_user}\n2 https://api.github.com/users/DavisVaughan/following{/other_user}\n3    https://api.github.com/users/ilovemane/following{/other_user}\n4  https://api.github.com/users/apeterson91/following{/other_user}\n5    https://api.github.com/users/nmercadeb/following{/other_user}\n6   https://api.github.com/users/JamesHWade/following{/other_user}\n                                           author.gists_url\n1       https://api.github.com/users/krlmlr/gists{/gist_id}\n2 https://api.github.com/users/DavisVaughan/gists{/gist_id}\n3    https://api.github.com/users/ilovemane/gists{/gist_id}\n4  https://api.github.com/users/apeterson91/gists{/gist_id}\n5    https://api.github.com/users/nmercadeb/gists{/gist_id}\n6   https://api.github.com/users/JamesHWade/gists{/gist_id}\n                                                author.starred_url\n1       https://api.github.com/users/krlmlr/starred{/owner}{/repo}\n2 https://api.github.com/users/DavisVaughan/starred{/owner}{/repo}\n3    https://api.github.com/users/ilovemane/starred{/owner}{/repo}\n4  https://api.github.com/users/apeterson91/starred{/owner}{/repo}\n5    https://api.github.com/users/nmercadeb/starred{/owner}{/repo}\n6   https://api.github.com/users/JamesHWade/starred{/owner}{/repo}\n                                 author.subscriptions_url\n1       https://api.github.com/users/krlmlr/subscriptions\n2 https://api.github.com/users/DavisVaughan/subscriptions\n3    https://api.github.com/users/ilovemane/subscriptions\n4  https://api.github.com/users/apeterson91/subscriptions\n5    https://api.github.com/users/nmercadeb/subscriptions\n6   https://api.github.com/users/JamesHWade/subscriptions\n                        author.organizations_url\n1       https://api.github.com/users/krlmlr/orgs\n2 https://api.github.com/users/DavisVaughan/orgs\n3    https://api.github.com/users/ilovemane/orgs\n4  https://api.github.com/users/apeterson91/orgs\n5    https://api.github.com/users/nmercadeb/orgs\n6   https://api.github.com/users/JamesHWade/orgs\n                                 author.repos_url\n1       https://api.github.com/users/krlmlr/repos\n2 https://api.github.com/users/DavisVaughan/repos\n3    https://api.github.com/users/ilovemane/repos\n4  https://api.github.com/users/apeterson91/repos\n5    https://api.github.com/users/nmercadeb/repos\n6   https://api.github.com/users/JamesHWade/repos\n                                           author.events_url\n1       https://api.github.com/users/krlmlr/events{/privacy}\n2 https://api.github.com/users/DavisVaughan/events{/privacy}\n3    https://api.github.com/users/ilovemane/events{/privacy}\n4  https://api.github.com/users/apeterson91/events{/privacy}\n5    https://api.github.com/users/nmercadeb/events{/privacy}\n6   https://api.github.com/users/JamesHWade/events{/privacy}\n                                 author.received_events_url author.type\n1       https://api.github.com/users/krlmlr/received_events        User\n2 https://api.github.com/users/DavisVaughan/received_events        User\n3    https://api.github.com/users/ilovemane/received_events        User\n4  https://api.github.com/users/apeterson91/received_events        User\n5    https://api.github.com/users/nmercadeb/received_events        User\n6   https://api.github.com/users/JamesHWade/received_events        User\n  author.user_view_type author.site_admin committer.login committer.id\n1                public             FALSE          krlmlr      1741643\n2                public             FALSE        web-flow     19864447\n3                public             FALSE        web-flow     19864447\n4                public             FALSE        web-flow     19864447\n5                public             FALSE        web-flow     19864447\n6                public             FALSE        web-flow     19864447\n     committer.node_id                                 committer.avatar_url\n1 MDQ6VXNlcjE3NDE2NDM=  https://avatars.githubusercontent.com/u/1741643?v=4\n2 MDQ6VXNlcjE5ODY0NDQ3 https://avatars.githubusercontent.com/u/19864447?v=4\n3 MDQ6VXNlcjE5ODY0NDQ3 https://avatars.githubusercontent.com/u/19864447?v=4\n4 MDQ6VXNlcjE5ODY0NDQ3 https://avatars.githubusercontent.com/u/19864447?v=4\n5 MDQ6VXNlcjE5ODY0NDQ3 https://avatars.githubusercontent.com/u/19864447?v=4\n6 MDQ6VXNlcjE5ODY0NDQ3 https://avatars.githubusercontent.com/u/19864447?v=4\n  committer.gravatar_id                         committer.url\n1                         https://api.github.com/users/krlmlr\n2                       https://api.github.com/users/web-flow\n3                       https://api.github.com/users/web-flow\n4                       https://api.github.com/users/web-flow\n5                       https://api.github.com/users/web-flow\n6                       https://api.github.com/users/web-flow\n           committer.html_url                         committer.followers_url\n1   https://github.com/krlmlr   https://api.github.com/users/krlmlr/followers\n2 https://github.com/web-flow https://api.github.com/users/web-flow/followers\n3 https://github.com/web-flow https://api.github.com/users/web-flow/followers\n4 https://github.com/web-flow https://api.github.com/users/web-flow/followers\n5 https://github.com/web-flow https://api.github.com/users/web-flow/followers\n6 https://github.com/web-flow https://api.github.com/users/web-flow/followers\n                                       committer.following_url\n1   https://api.github.com/users/krlmlr/following{/other_user}\n2 https://api.github.com/users/web-flow/following{/other_user}\n3 https://api.github.com/users/web-flow/following{/other_user}\n4 https://api.github.com/users/web-flow/following{/other_user}\n5 https://api.github.com/users/web-flow/following{/other_user}\n6 https://api.github.com/users/web-flow/following{/other_user}\n                                    committer.gists_url\n1   https://api.github.com/users/krlmlr/gists{/gist_id}\n2 https://api.github.com/users/web-flow/gists{/gist_id}\n3 https://api.github.com/users/web-flow/gists{/gist_id}\n4 https://api.github.com/users/web-flow/gists{/gist_id}\n5 https://api.github.com/users/web-flow/gists{/gist_id}\n6 https://api.github.com/users/web-flow/gists{/gist_id}\n                                         committer.starred_url\n1   https://api.github.com/users/krlmlr/starred{/owner}{/repo}\n2 https://api.github.com/users/web-flow/starred{/owner}{/repo}\n3 https://api.github.com/users/web-flow/starred{/owner}{/repo}\n4 https://api.github.com/users/web-flow/starred{/owner}{/repo}\n5 https://api.github.com/users/web-flow/starred{/owner}{/repo}\n6 https://api.github.com/users/web-flow/starred{/owner}{/repo}\n                          committer.subscriptions_url\n1   https://api.github.com/users/krlmlr/subscriptions\n2 https://api.github.com/users/web-flow/subscriptions\n3 https://api.github.com/users/web-flow/subscriptions\n4 https://api.github.com/users/web-flow/subscriptions\n5 https://api.github.com/users/web-flow/subscriptions\n6 https://api.github.com/users/web-flow/subscriptions\n                 committer.organizations_url\n1   https://api.github.com/users/krlmlr/orgs\n2 https://api.github.com/users/web-flow/orgs\n3 https://api.github.com/users/web-flow/orgs\n4 https://api.github.com/users/web-flow/orgs\n5 https://api.github.com/users/web-flow/orgs\n6 https://api.github.com/users/web-flow/orgs\n                          committer.repos_url\n1   https://api.github.com/users/krlmlr/repos\n2 https://api.github.com/users/web-flow/repos\n3 https://api.github.com/users/web-flow/repos\n4 https://api.github.com/users/web-flow/repos\n5 https://api.github.com/users/web-flow/repos\n6 https://api.github.com/users/web-flow/repos\n                                    committer.events_url\n1   https://api.github.com/users/krlmlr/events{/privacy}\n2 https://api.github.com/users/web-flow/events{/privacy}\n3 https://api.github.com/users/web-flow/events{/privacy}\n4 https://api.github.com/users/web-flow/events{/privacy}\n5 https://api.github.com/users/web-flow/events{/privacy}\n6 https://api.github.com/users/web-flow/events{/privacy}\n                          committer.received_events_url committer.type\n1   https://api.github.com/users/krlmlr/received_events           User\n2 https://api.github.com/users/web-flow/received_events           User\n3 https://api.github.com/users/web-flow/received_events           User\n4 https://api.github.com/users/web-flow/received_events           User\n5 https://api.github.com/users/web-flow/received_events           User\n6 https://api.github.com/users/web-flow/received_events           User\n  committer.user_view_type committer.site_admin\n1                   public                FALSE\n2                   public                FALSE\n3                   public                FALSE\n4                   public                FALSE\n5                   public                FALSE\n6                   public                FALSE\n                                                                                                                                                                                                                      parents\n1 e4e9a295a373b85e02ae084a23f12e9212a72b98, https://api.github.com/repos/tidyverse/dplyr/commits/e4e9a295a373b85e02ae084a23f12e9212a72b98, https://github.com/tidyverse/dplyr/commit/e4e9a295a373b85e02ae084a23f12e9212a72b98\n2 1d17672a54305170dc75c251f8ae69a85c0bea37, https://api.github.com/repos/tidyverse/dplyr/commits/1d17672a54305170dc75c251f8ae69a85c0bea37, https://github.com/tidyverse/dplyr/commit/1d17672a54305170dc75c251f8ae69a85c0bea37\n3 cfb25a030f9f7c39f77fed2c97f3fa7b15a55e84, https://api.github.com/repos/tidyverse/dplyr/commits/cfb25a030f9f7c39f77fed2c97f3fa7b15a55e84, https://github.com/tidyverse/dplyr/commit/cfb25a030f9f7c39f77fed2c97f3fa7b15a55e84\n4 85e94fcde02ad49c77510991078899278489fd8f, https://api.github.com/repos/tidyverse/dplyr/commits/85e94fcde02ad49c77510991078899278489fd8f, https://github.com/tidyverse/dplyr/commit/85e94fcde02ad49c77510991078899278489fd8f\n5 e0555277878ed174d40bda86690674ecdc27db55, https://api.github.com/repos/tidyverse/dplyr/commits/e0555277878ed174d40bda86690674ecdc27db55, https://github.com/tidyverse/dplyr/commit/e0555277878ed174d40bda86690674ecdc27db55\n6 173b4232bff810f563e1739211ea7545ed0651e6, https://api.github.com/repos/tidyverse/dplyr/commits/173b4232bff810f563e1739211ea7545ed0651e6, https://github.com/tidyverse/dplyr/commit/173b4232bff810f563e1739211ea7545ed0651e6\n```\n\n\n:::\n:::\n\n\n\nThen, we can extract specific data from the commits including details like the commit message, author, and date. We will create a simplified data frame with just these columns.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncommits_df <- tibble(\n    sha = commits$sha,\n    author = commits$commit$author$name,\n    date = commits$commit$author$date,\n    message = commits$commit$message)\ncommits_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 30 × 4\n   sha                                      author               date    message\n   <chr>                                    <chr>                <chr>   <chr>  \n 1 fb25640fa1eb74746a7a74a06090045106e5d20f Kirill Müller        2024-1… \"Move …\n 2 e4e9a295a373b85e02ae084a23f12e9212a72b98 Davis Vaughan        2024-1… \"Remov…\n 3 1d17672a54305170dc75c251f8ae69a85c0bea37 Mike Du              2024-0… \"Add e…\n 4 cfb25a030f9f7c39f77fed2c97f3fa7b15a55e84 Adam                 2024-0… \"Add d…\n 5 85e94fcde02ad49c77510991078899278489fd8f Núria Mercadé-Besora 2024-0… \"Docum…\n 6 e0555277878ed174d40bda86690674ecdc27db55 James Wade           2024-0… \"Add a…\n 7 173b4232bff810f563e1739211ea7545ed0651e6 Kirill Müller        2024-0… \"Fix e…\n 8 b2c7e047081301afe2ca376c508491d77bea4bde Jeremy Winget        2024-0… \"Fix `…\n 9 663d7f07140b45d5d3a256465728d9d5c35b9455 Rodrigo Dal Ben      2024-0… \"Fix t…\n10 cdc99196a2d80f14b48ceb5edad328ab34a5bf65 Davis Vaughan        2024-0… \"Add `…\n# ℹ 20 more rows\n```\n\n\n:::\n:::\n\n\n\n\nBecause GitHub's API allows only a limited number of unauthenticated requests per hour, it’s useful to add a Personal Access Token (PAT) to increase rate limits.\n\n:::::: {.callout-note}\n\nCreate a PAT: Students can create a PAT from their GitHub account (Settings > Developer settings > Personal access tokens). It’s a good idea to only grant “read” permissions.\n\nStore the PAT securely: The PAT can be stored in a `.Renviron` file for secure use. Add the following to `.Renviron`:\n\n\n```\nGITHUB_PAT=your_personal_access_token_here\n```\n\n:::\n\nNow, we can use the PAT in our `httr2` request. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read the PAT from environment variables\ngithub_pat <- Sys.getenv(\"GITHUB_PAT\")\n\n# Make the GET request with PAT for authentication\nresponse <- request(url) %>%\n  req_auth_bearer_token(github_pat) %>%\n  req_perform()\n```\n:::\n\n\n\nNow, we check the response as before\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (resp_status(response) == 200) {\n  commits <- resp_body_json(response, simplifyVector = TRUE)\n  commits_df <- tibble(\n    sha = commits$sha,\n    author = commits$commit$author$name,\n    date = commits$commit$author$date,\n    message = commits$commit$message)\n  commits_df\n} else {\n  message(\"Failed to retrieve data. Status code: \", resp_status(response))\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 30 × 4\n   sha                                      author               date    message\n   <chr>                                    <chr>                <chr>   <chr>  \n 1 fb25640fa1eb74746a7a74a06090045106e5d20f Kirill Müller        2024-1… \"Move …\n 2 e4e9a295a373b85e02ae084a23f12e9212a72b98 Davis Vaughan        2024-1… \"Remov…\n 3 1d17672a54305170dc75c251f8ae69a85c0bea37 Mike Du              2024-0… \"Add e…\n 4 cfb25a030f9f7c39f77fed2c97f3fa7b15a55e84 Adam                 2024-0… \"Add d…\n 5 85e94fcde02ad49c77510991078899278489fd8f Núria Mercadé-Besora 2024-0… \"Docum…\n 6 e0555277878ed174d40bda86690674ecdc27db55 James Wade           2024-0… \"Add a…\n 7 173b4232bff810f563e1739211ea7545ed0651e6 Kirill Müller        2024-0… \"Fix e…\n 8 b2c7e047081301afe2ca376c508491d77bea4bde Jeremy Winget        2024-0… \"Fix `…\n 9 663d7f07140b45d5d3a256465728d9d5c35b9455 Rodrigo Dal Ben      2024-0… \"Fix t…\n10 cdc99196a2d80f14b48ceb5edad328ab34a5bf65 Davis Vaughan        2024-0… \"Add `…\n# ℹ 20 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n### Example: Learn about Stephanie\n\n\nLet's start by using the GitHub API to learn information about myself (Stephanie Hicks). \nFirst, let's check out <https://api.github.com/users/stephaniehicks>. \n\nNow, we have decided to explore <https://api.github.com/users/stephaniehicks/repos>. \n\nTo use `httr2`, start by creating a request:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nowner <- \"stephaniehicks\"\nurl <- paste0(\"https://api.github.com/users/\", owner,\"/repos\")\n\n# Make the GET request with PAT for authentication\nresponse <- request(url) %>%\n  req_auth_bearer_token(github_pat) %>%\n  req_perform()\n\nstephanie <- resp_body_json(response, simplifyVector = TRUE)\n```\n:::\n\n\n\nWe convert the response to a parsed JSON file (or a list). \n\n## A bit of EDA fun\n\nLet's have a bit of fun and explore some questions:  \n\n- How many public repositories do I have? \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstephanie$forks\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  4  0  1  0  1  0  0  2  0  0  0  4  1  1  0  1 11  0  0  3  0  3  0  1  1\n[26]  0  0  1  0  0\n```\n\n\n:::\n:::\n\n\n\nWhat's the most popular language? \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(stephanie$language)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n            HTML Jupyter Notebook                R             Ruby \n               7                1               12                2 \n             TeX \n               1 \n```\n\n\n:::\n:::\n\n\n\nTo find out how many repos that I have\nwith open issues, we can just create \na table: \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# how many repos have open issues? \ntable(stephanie$open_issues)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n 0  1 \n27  3 \n```\n\n\n:::\n:::\n\n\n\nWhew! Not as many as I thought.\n\n:::{.callout-tip}\n\n\n\n## Other examples with GitHub API\n\nFinally, I will leave you with a few other examples of using GitHub API: \n\n* [How long does it take to close a GitHub Issue in the `dplyr` package?](https://blog.exploratory.io/analyzing-issue-data-with-github-rest-api-63945017dedc)\n* [How to retrieve all commits for a branch](https://stackoverflow.com/questions/9179828/github-api-retrieve-all-commits-for-all-branches-for-a-repo)\n* [Getting my GitHub Activity](https://masalmon.eu/2017/12/21/wherehaveyoubeen/)",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}