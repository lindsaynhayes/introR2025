{
  "hash": "b4ef53972cb2700a058d2b6362907207",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Database programming paradigms\"\nauthor: \n  - name: Stephanie Hicks\n    url: https://stephaniehicks.com\n    affiliation: Department of Biostatistics, Johns Hopkins\n    affiliation_url: https://publichealth.jhu.edu\ndescription: \"Relational databases and SQL basics\"\ndate: 2024-11-12\n---\n\n\n\n# Pre-lecture activities\n\n::: callout-important\n\nFor this lecture, we will use Unix shell, plus [SQLite3](https://www.sqlite.org/index.html) or [DB Browser for SQLite](https://sqlitebrowser.org).\n\nYou can see if the command-line tool `sqlite3` (also known as \"SQLite\") is already installed with \n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nsqlite3 --version\n```\n\n\n::: {.cell-output .cell-output-stdout}\n\n```\n3.43.2 2023-10-10 13:08:14 1b37c146ee9ebb7acd0160c0ab1fd11017a419fa8a3187386ed8cb32b709aapl (64-bit)\n```\n\n\n:::\n:::\n\n\n\nIf not, you can install with `homebrew` or follow the instructions here: \n\n- <https://swcarpentry.github.io/sql-novice-survey/setup.html>\n\nAlso, you will need to install these R packages:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"DBI\")\ninstall.packages(\"RSQLite\")\ninstall.packages(\"dbplyr\")\n```\n:::\n\n\n\n:::\n\nIn addition, please read through\n\n- <https://swcarpentry.github.io/sql-novice-survey>\n- <https://dbi.r-dbi.org>\n- <https://solutions.posit.co/connections/db/databases/sqlite/>\n- <https://dbplyr.tidyverse.org>\n\n\n\n::: callout-note\n\n## How much should I prepare for before class? \n\n:::\n\n\n# Lecture \n\n## Acknowledgements\n\nMaterial for this lecture was borrowed and adopted from\n\n- <https://www.stephaniehicks.com/jhuads2021/posts/2021-12-06-sql-basics>\n- <https://swcarpentry.github.io/sql-novice-survey>\n\n\n## Learning objectives\n\n::: callout-note\n### Learning objectives\n\n**At the end of this lesson you will:**\n\n- Explain the difference between a table, a record, and a field in relational databases\n- Explain the difference between a database and a database manager\n- Write a query to select all values for specific fields from a single table\n- Write queries that display results in a particular order\n- Write queries that eliminate duplicate values from data\n- Write queries that select records that satisfy user-specified conditions\n- Learn about the `DBI`, `RSQLite`, `dbplyr` packages for making SQL queries in R\n\n:::\n\n\n\n## Slides \n\n- <add here>\n\n\n# Post-lecture\n\n## Additional practice\n\nHere are some additional practice questions to help you think about the material discussed.\n\n::: callout-note\n### Questions\n\nUsing the `survey.db` database: \n\n1. Use `.schema` to identify column that contains integers\n2. Write a query that selects only the `name` column from the `Site` table.\n3. Many people format queries in the following two ways. What style do you find easiest to read, and why?\n\n```\nSELECT personal, family FROM person;\n```\n\nor\n\n```\nselect Personal, Family from PERSON;\n```\n\n4. Write a query that selects distinct dates from the `Visited` table.\n5. Write a query that displays the full names of the scientists in the `Person` table, ordered by family name.\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}