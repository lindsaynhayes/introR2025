{
  "hash": "8f423816f44b9382b2ef3a1b11ea5f08",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"L02\"\nauthor: \"Lindsay N Hayes\"\ndraft: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(taylor)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\ndata = taylor_all_songs[!(taylor_all_songs$album_name %in% c(\"The Taylor Swift Holiday Collection\", \"Beautiful Eyes\", NA)), c(\"album_name\", \"album_release\", \"track_number\", \"track_name\", \"danceability\", \"energy\", \"key\", \"loudness\", \"mode\", \"speechiness\", \"acousticness\", \"instrumentalness\", \"liveness\", \"valence\", \"tempo\", \"time_signature\", \"duration_ms\", \"explicit\", \"key_name\", \"mode_name\", \"key_mode\")]\n\nifelse(!dir.exists(file.path(\"data\")), dir.create(file.path(\"data\")), FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\n\n# Export\n\n::: {.cell}\n\n```{.r .cell-code}\n# base R\nwrite.csv(data, file = \"data/taylorswift.csv\")\n\n# Tidyverse\nwrite_csv(data, file = \"data/taylorswift.csv\")\n\n# Other types of ways to save data/objects in R\n\n# Use saveRDS() to save one single R object as an .rds format\nsaveRDS(data, file = \"data/taylorswift.rds\")\n\n# when you read it in you need to define the object\ntaylor <- readRDS(file = \"data/taylorswift.rds\")\n\n# You can also save multiple objects altogether as one .rda format\n#save(data, types, plot1, file = \"data/taylor_analysis.rda\")\n\n# when you read it back into R you just have to load the data and all the objects names are restored\n#load(file = \"data/taylor_analysis.rda\")\n\n# Lastly, you can save your entire workspace all the objects, plots, data, values you've generated using save.image()\nsave.image(file = \"data/taylor_workspace.rda\")\n\n# then to restore the workspace you use load again\nload(file = \"data/taylor_workspace.rda\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}