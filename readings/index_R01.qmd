title: "R & RStudio"
subtitle: "01-RStudio"
description: "Welcome to R and R Studio"
author: 
  - name: Lindsay Hayes
    url: https://lindsaynhayes.github.io
    affiliation: Department of Cell Biology, OUHSC
date: 2025-07-01
draft: true
---

```{r}
#| echo: false
#| message: false
library(here)
```

# Welcome to R/RStudio

What is R and RStudio and why is it important to learn and implement in all your data analysis pipelines from simple to complex? The reading below and the the materials covered during this course will answer this very question. 

::: callout-note
### Learning objectives

**At the end of this lesson you will:**

-   Describe the purpose of the RStudio Script, Console, Environment, and Plots panes.
-   Organize files and directories for a set of analyses as an R project, and understand the purpose of the working directory.
-   Use the built-in RStudio help interface to search for more information on R functions.
-   Demonstrate how to provide sufficient information for troubleshooting with the R user community.

:::

## What is R? What is RStudio?

The term [R](https://www.r-project.org/) is used to refer to the
*programming language*, the *environment for statistical computing*
and *the software* that interprets the scripts written using it.

[RStudio](https://rstudio.com) is currently a very popular way to not
only write your R scripts but also to interact with the R
software[^plainr]. To function correctly, RStudio needs R and
therefore both need to be installed on your computer.

[^plainr]: As opposed to using R directly from the command line
console. There exist other software that interface and integrate
with R, but RStudio is particularly well suited for beginners
while providing numerous very advanced features.

The [RStudio IDE Cheat
Sheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/rstudio-ide.pdf)
provides much more information than will be covered here, but can be
useful to learn keyboard shortcuts and discover new features.

## Why learn R?

### R does not involve lots of pointing and clicking, and that's a good thing

The learning curve might be steeper than with other software, but with
R, the results of your analysis do not rely on remembering a
succession of pointing and clicking, but instead on a series of
written commands, and that's a good thing! So, if you want to redo
your analysis because you collected more data, you don't have to
remember which button you clicked in which order to obtain your
results; you just have to run your script again.

Working with scripts makes the steps you used in your analysis clear,
and the code you write can be inspected by someone else who can give
you feedback and spot mistakes.

Working with scripts forces you to have a deeper understanding of what
you are doing, and facilitates your learning and comprehension of the
methods you use.

### R code is great for reproducibility

Reproducibility means that someone else (including your future self) can
obtain the same results from the same dataset when using the same
analysis code.

R integrates with other tools to generate manuscripts or reports from your
code. If you collect more data, or fix a mistake in your dataset, the
figures and the statistical tests in your manuscript or report are updated
automatically.

An increasing number of journals and funding agencies expect analyses
to be reproducible, so knowing R will give you an edge with these
requirements.

### R is interdisciplinary and extensible

With 10000+ packages that can be installed to extend its
capabilities, R provides a framework that allows you to combine
statistical approaches from many scientific disciplines to best suit
the analytical framework you need to analyse your data. For instance,
R has packages for image analysis, GIS, time series, population
genetics, and a lot more.

### R works on data of all shapes and sizes

The skills you learn with R scale easily with the size of your
dataset. Whether your dataset has hundreds or millions of lines, it
won't make much difference to you.

R is designed for data analysis. It comes with special data structures
and data types that make handling of missing data and statistical
factors convenient.

R can connect to spreadsheets, databases, and many other data formats,
on your computer or on the web.

### R produces high-quality graphics

The plotting functionalities in R are extensive, and allow you to adjust
any aspect of your graph to convey most effectively the message from
your data.

### R has a large and welcoming community

Thousands of people use R daily. Many of them are willing to help you
through mailing lists and websites such as [Stack
Overflow](https://stackoverflow.com/), or on the [RStudio
community](https://community.rstudio.com/). These broad user communities
extend to specialised areas such as bioinformatics. One such subset of the R community is [Bioconductor](https://bioconductor.org/), a scientific project for analysis and comprehension "of data from current and emerging biological assays."

### Not only is R free, but it is also open-source and cross-platform

Anyone can inspect the source code to see how R works. Because of this
transparency, there is less chance for mistakes, and if you (or
someone else) find some, you can report and fix bugs.


## Navigating RStudio
We will use the RStudio IDE to write code, navigate the files on our computer, inspect the variables we are going to create, and visualize the plots we will generate.



## References 

::: callout-tip
### References

**Content pulled from**

-   swcarpentry <https://carpentries-incubator.github.io/bioc-intro/20-r-rstudio.html#why-learn-r>

:::